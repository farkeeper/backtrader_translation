digraph "classes" {
rankdir=BT
charset="utf-8"
"backtrader.indicators.contrib.A" [color="black", fontcolor="black", label="{A|name\l|}", shape="record", style="solid"];
"backtrader.stores.oandastore.API" [color="black", fontcolor="black", label="{API|\l|request(endpoint, method, params)\l}", shape="record", style="solid"];
"backtrader.feed.AbstractDataBase" [color="black", fontcolor="black", label="{AbstractDataBase|CONNBROKEN\lCONNECTED\lDELAYED\lDISCONNECTED\lLIVE\lNOTSUBSCRIBED\lNOTSUPPORTED_TF\lUNKNOWN\lfromdate : float\lparams : tuple\lreplaying : int\lresampling : int\lsessionend\lsessionstart\ltick_last : NoneType\ltodate : float\l|addfilter(p)\laddfilter_simple(f)\ladvance(size, datamaster, ticks)\ladvance_peek()\lclone()\lcompensate(other)\lcopyas(_dataname)\ldate2num(dt)\ldo_qcheck(onoff, qlapse)\lget_notifications()\lgetenvironment()\lgetfeed()\lhaslivedata()\lislive()\lload()\lnext(datamaster, ticks)\lnum2date(dt, tz, naive)\lpreload()\lput_notification(status)\lqbuffer(savemem, replaying)\lreplay()\lresample()\lsetenvironment(env)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.indicators.accdecoscillator.AccelerationDecelerationOscillator" [color="black", fontcolor="black", label="{AccelerationDecelerationOscillator|alias : tuple\llines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.Accum" [color="black", fontcolor="black", label="{Accum|alias : tuple\llines : tuple\lparams : tuple\l|next()\lnextstart()\lonce(start, end)\loncestart(start, end)\l}", shape="record", style="solid"];
"backtrader.indicators.kama.AdaptiveMovingAverage" [color="black", fontcolor="black", label="{AdaptiveMovingAverage|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.functions.All" [color="black", fontcolor="black", label="{All|flogic\l|}", shape="record", style="solid"];
"backtrader.sizers.percents_sizer.AllInSizer" [color="black", fontcolor="black", label="{AllInSizer|params : tuple\l|}", shape="record", style="solid"];
"backtrader.sizers.percents_sizer.AllInSizerInt" [color="black", fontcolor="black", label="{AllInSizerInt|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.AllN" [color="black", fontcolor="black", label="{AllN|func\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.analyzer.Analyzer" [color="black", fontcolor="black", label="{Analyzer|csv : bool\lrets : OrderedDict\l|create_analysis()\lget_analysis()\lnext()\lnextstart()\lnotify_cashvalue(cash, value)\lnotify_fund(cash, value, fundvalue, shares)\lnotify_order(order)\lnotify_trade(trade)\lpprint()\lprenext()\lprint()\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.functions.And" [color="black", fontcolor="black", label="{And|flogic : staticmethod\l|}", shape="record", style="solid"];
"backtrader.analyzers.annualreturn.AnnualReturn" [color="black", fontcolor="black", label="{AnnualReturn|ret : OrderedDict\lrets : list\l|get_analysis()\lstop()\l}", shape="record", style="solid"];
"backtrader.functions.Any" [color="black", fontcolor="black", label="{Any|flogic\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.AnyN" [color="black", fontcolor="black", label="{AnyN|func\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.ApplyN" [color="black", fontcolor="black", label="{ApplyN|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.aroon.AroonDown" [color="black", fontcolor="black", label="{AroonDown|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.aroon.AroonOscillator" [color="black", fontcolor="black", label="{AroonOscillator|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.aroon.AroonUp" [color="black", fontcolor="black", label="{AroonUp|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.aroon.AroonUpDown" [color="black", fontcolor="black", label="{AroonUpDown|alias : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.aroon.AroonUpDownOscillator" [color="black", fontcolor="black", label="{AroonUpDownOscillator|alias : tuple\l|}", shape="record", style="solid"];
"backtrader.plot.locator.AutoDateFormatter" [color="black", fontcolor="black", label="{AutoDateFormatter|\l|}", shape="record", style="solid"];
"backtrader.plot.locator.AutoDateLocator" [color="black", fontcolor="black", label="{AutoDateLocator|\l|datalim_to_dt()\lget_locator(dmin, dmax)\ltick_values(vmin, vmax)\lviewlim_to_dt()\l}", shape="record", style="solid"];
"backtrader.utils.autodict.AutoDict" [color="black", fontcolor="black", label="{AutoDict|lost : int\ltlong\ltshort\lwon : int\l|}", shape="record", style="solid"];
"backtrader.utils.autodict.AutoDictList" [color="black", fontcolor="black", label="{AutoDictList|\l|}", shape="record", style="solid"];
"backtrader.metabase.AutoInfoClass" [color="black", fontcolor="black", label="{AutoInfoClass|\l|isdefault(pname)\lnotdefault(pname)\l}", shape="record", style="solid"];
"backtrader.utils.autodict.AutoOrderedDict" [color="black", fontcolor="black", label="{AutoOrderedDict|drawdown : float\llen : int\lmoneydown : float\lsqn : NoneType, int\ltrades : int\l|lvalues()\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.Average" [color="black", fontcolor="black", label="{Average|alias : tuple\llines : tuple\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.AverageDirectionalMovementIndex" [color="black", fontcolor="black", label="{AverageDirectionalMovementIndex|alias : tuple\llines : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.AverageDirectionalMovementIndexRating" [color="black", fontcolor="black", label="{AverageDirectionalMovementIndexRating|alias : tuple\llines : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.atr.AverageTrueRange" [color="black", fontcolor="black", label="{AverageTrueRange|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.awesomeoscillator.AwesomeOscillator" [color="black", fontcolor="black", label="{AwesomeOscillator|alias : tuple\llines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.brokers.bbroker.BackBroker" [color="black", fontcolor="black", label="{BackBroker|cash : NoneType\lcerebro\ld_credit : defaultdict\lfundmode\lfundshares\lfundvalue\lgetcash\lgetvalue\lnotifs : deque\lorders : list\lparams : tuple\lpending : deque\lpositions : defaultdict\lsetcash\lseteosbar\lstartingcash\lsubmitted : deque\l|add_cash(cash)\ladd_order_history(orders, notify)\lbuy(owner, data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent, parent, transmit, histnotify, _checksubmit)\lcancel(order, bracket)\lcheck_submitted()\lget_cash()\lget_fundmode()\lget_fundshares()\lget_fundvalue()\lget_leverage()\lget_notification()\lget_orders_open(safe)\lget_value(datas, mkt, lever)\lget_value_lever(datas, mkt)\lgetposition(data)\linit()\lnext()\lnotify(order)\lorderstatus(order)\lsell(owner, data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent, parent, transmit, histnotify, _checksubmit)\lset_cash(cash)\lset_checksubmit(checksubmit)\lset_coc(coc)\lset_coo(coo)\lset_eosbar(eosbar)\lset_filler(filler)\lset_fund_history(fund)\lset_fundmode(fundmode, fundstartval)\lset_fundstartval(fundstartval)\lset_int2pnl(int2pnl)\lset_shortcash(shortcash)\lset_slippage_fixed(fixed, slip_open, slip_limit, slip_match, slip_out)\lset_slippage_perc(perc, slip_open, slip_limit, slip_match, slip_out)\lsubmit(order, check)\lsubmit_accept(order)\ltransmit(order, check)\l}", shape="record", style="solid"];
"backtrader.feeds.btcsv.BacktraderCSV" [color="black", fontcolor="black", label="{BacktraderCSV|DataCls\l|}", shape="record", style="solid"];
"backtrader.feeds.btcsv.BacktraderCSVData" [color="black", fontcolor="black", label="{BacktraderCSVData|\l|}", shape="record", style="solid"];
"backtrader.errors.BacktraderError" [color="black", fontcolor="red", label="{BacktraderError|\l|}", shape="record", style="solid"];
"backtrader.fillers.BarPointPerc" [color="black", fontcolor="black", label="{BarPointPerc|params : tuple\l|}", shape="record", style="solid"];
"backtrader.filters.daysteps.BarReplayer_Open" [color="black", fontcolor="black", label="{BarReplayer_Open|pendingbar : NoneType\l|last(data)\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.BaseApplyN" [color="black", fontcolor="black", label="{BaseApplyN|func\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.observers.benchmark.Benchmark" [color="black", fontcolor="black", label="{Benchmark|lines : tuple\lparams : tuple\lplotlines : dict\ltbench\ltreturn\l|next()\lprenext()\l}", shape="record", style="solid"];
"backtrader.feeds.blaze.BlazeData" [color="black", fontcolor="black", label="{BlazeData|datafields : list\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.indicators.bollinger.BollingerBands" [color="black", fontcolor="black", label="{BollingerBands|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.bollinger.BollingerBandsPct" [color="black", fontcolor="black", label="{BollingerBandsPct|lines : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.observers.broker.Broker" [color="black", fontcolor="black", label="{Broker|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\l|next()\lstart()\l}", shape="record", style="solid"];
"backtrader.broker.BrokerBase" [color="black", fontcolor="black", label="{BrokerBase|comminfo : dict\lfundmode\lfundshares\lfundvalue\lparams : tuple\l|add_order_history(orders, notify)\laddcommissioninfo(comminfo, name)\lbuy(owner, data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent)\lcancel(order)\lget_fundmode()\lget_fundshares()\lget_fundvalue()\lgetcash()\lgetcommissioninfo(data)\lgetposition(data)\lgetvalue(datas)\linit()\lnext()\lsell(owner, data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent)\lset_fund_history(fund)\lset_fundmode(fundmode, fundstartval)\lsetcommission(commission, margin, mult, commtype, percabs, stocklike, interest, interest_long, leverage, automargin, name)\lstart()\lstop()\lsubmit(order)\l}", shape="record", style="solid"];
"backtrader.order.BuyOrder" [color="black", fontcolor="black", label="{BuyOrder|ordtype\l|}", shape="record", style="solid"];
"backtrader.observers.buysell.BuySell" [color="black", fontcolor="black", label="{BuySell|curbuylen : int\lcurselllen : int\llines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.feed.CSVDataBase" [color="black", fontcolor="black", label="{CSVDataBase|f : NoneType\lf : NoneType\lparams : tuple\lseparator\l|preload()\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.feed.CSVFeedBase" [color="black", fontcolor="black", label="{CSVFeedBase|params\l|}", shape="record", style="solid"];
"backtrader.filters.calendardays.CalendarDays" [color="black", fontcolor="black", label="{CalendarDays|ONEDAY : timedelta\llastdt\llastdt : date\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.analyzers.calmar.Calmar" [color="black", fontcolor="black", label="{Calmar|calmar\lpackages : tuple\lparams : tuple\l|on_dt_over()\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.plot.finance.CandlestickPlotHandler" [color="black", fontcolor="black", label="{CandlestickPlotHandler|barcol : PolyCollection\lcolordown : tuple\lcolorup : tuple\ledgedown : tuple\ledgeup : tuple\llegend_closes : list\llegend_highs : list\llegend_lows : list\llegend_opens : list\ltickcol : LineCollection\ltickdown : tuple\ltickup : tuple\l|barcollection(xs, opens, highs, lows, closes, width, tickwidth, edgeadjust, label, scaling, bot, fillup, filldown)\llegend_artist(legend, orig_handle, fontsize, handlebox)\l}", shape="record", style="solid"];
"backtrader.observers.broker.Cash" [color="black", fontcolor="black", label="{Cash|lines : tuple\lplotinfo : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.cerebro.Cerebro" [color="black", fontcolor="black", label="{Cerebro|analyzers : list\lbroker\ldatacbs : list\ldatas : list\ldatasbyname : OrderedDict\lfeeds : list\lindicators : list\lobservers : list\loptcbs : list\lparams : tuple\lrunningstrats : list\lrunstrats : list\lrunwriters : list\lsignals : list\lsizers : dict\lstcount : count\lstorecbs : list\lstores : list\lstrats : list\lwriters : list\lwriters_csv\l|add_order_history(orders, notify)\ladd_signal(sigtype, sigcls)\ladd_timer(when, offset, repeat, weekdays, weekcarry, monthdays, monthcarry, allow, tzdata, strats, cheat)\laddanalyzer(ancls)\laddcalendar(cal)\ladddata(data, name)\ladddatacb(callback)\laddindicator(indcls)\laddobserver(obscls)\laddobservermulti(obscls)\laddsizer(sizercls)\laddsizer_byidx(idx, sizercls)\laddstore(store)\laddstorecb(callback)\laddstrategy(strategy)\laddtz(tz)\laddwriter(wrtcls)\lchaindata()\lgetbroker()\literize(iterable)\lnotify_data(data, status)\lnotify_store(msg)\lnotify_timer(timer, when)\loptcallback(cb)\loptstrategy(strategy)\lplot(plotter, numfigs, iplot, start, end, width, height, dpi, tight, use)\lreplaydata(dataname, name)\lresampledata(dataname, name)\lrolloverdata()\lrun()\lrunstop()\lrunstrategies(iterstrat, predata)\lset_fund_history(fund)\lsetbroker(broker)\lsignal_accumulate(onoff)\lsignal_concurrent(onoff)\lsignal_strategy(stratcls)\lstop_writers(runstrats)\l}", shape="record", style="solid"];
"backtrader.feeds.chainer.Chainer" [color="black", fontcolor="black", label="{Chainer|\l|get_notifications()\lislive()\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.functions.Cmp" [color="black", fontcolor="black", label="{Cmp|a\lb\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.functions.CmpEx" [color="black", fontcolor="black", label="{CmpEx|a\lb\lr1\lr2\lr3\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.indicators.ols.CointN" [color="black", fontcolor="black", label="{CointN|frompackages : tuple\llines : tuple\lpackages : tuple\lparams : tuple\l|next()\l}", shape="record", style="solid"];
"backtrader.commissions.CommInfo" [color="black", fontcolor="black", label="{CommInfo|\l|}", shape="record", style="solid"];
"backtrader.comminfo.CommInfoBase" [color="black", fontcolor="black", label="{CommInfoBase|COMM_FIXED\lCOMM_PERC\lmargin\lparams : tuple\lstocklike\l|cashadjust(size, price, newprice)\lconfirmexec(size, price)\lget_credit_interest(data, pos, dt)\lget_leverage()\lget_margin(price)\lgetcommission(size, price)\lgetoperationcost(size, price)\lgetsize(price, cash)\lgetvalue(position, price)\lgetvaluesize(size, price)\lprofitandloss(size, price, newprice)\l}", shape="record", style="solid"];
"backtrader.commissions.CommInfo_Futures" [color="black", fontcolor="black", label="{CommInfo_Futures|params : tuple\l|}", shape="record", style="solid"];
"backtrader.commissions.CommInfo_Futures_Fixed" [color="black", fontcolor="black", label="{CommInfo_Futures_Fixed|params : tuple\l|}", shape="record", style="solid"];
"backtrader.commissions.CommInfo_Futures_Perc" [color="black", fontcolor="black", label="{CommInfo_Futures_Perc|params : tuple\l|}", shape="record", style="solid"];
"backtrader.commissions.CommInfo_Stocks" [color="black", fontcolor="black", label="{CommInfo_Stocks|params : tuple\l|}", shape="record", style="solid"];
"backtrader.commissions.CommInfo_Stocks_Fixed" [color="black", fontcolor="black", label="{CommInfo_Stocks_Fixed|params : tuple\l|}", shape="record", style="solid"];
"backtrader.commissions.CommInfo_Stocks_Perc" [color="black", fontcolor="black", label="{CommInfo_Stocks_Perc|params : tuple\l|}", shape="record", style="solid"];
"backtrader.comminfo.CommissionInfo" [color="black", fontcolor="black", label="{CommissionInfo|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.cci.CommodityChannelIndex" [color="black", fontcolor="black", label="{CommodityChannelIndex|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.crossover.CrossDown" [color="black", fontcolor="black", label="{CrossDown|\l|}", shape="record", style="solid"];
"backtrader.indicators.crossover.CrossOver" [color="black", fontcolor="black", label="{CrossOver|lines : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.crossover.CrossUp" [color="black", fontcolor="black", label="{CrossUp|\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.DTFaker" [color="black", fontcolor="black", label="{DTFaker|data\ldatetime\lp\lsessionend\l|date(idx)\ldate2num()\ldatetime(idx)\lnum2date()\ltime(idx)\l}", shape="record", style="solid"];
"backtrader.indicators.dv2.DV2" [color="black", fontcolor="black", label="{DV2|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.lineiterator.DataAccessor" [color="black", fontcolor="black", label="{DataAccessor|PriceClose\lPriceDateTime\lPriceHigh\lPriceLow\lPriceOpen\lPriceOpenInteres\lPriceVolume\l|}", shape="record", style="solid"];
"backtrader.feed.DataBase" [color="black", fontcolor="black", label="{DataBase|\l|}", shape="record", style="solid"];
"backtrader.feed.DataClone" [color="black", fontcolor="black", label="{DataClone|data\lfromdate\lsessionend\lsessionstart\ltodate\l|advance(size, datamaster, ticks)\lpreload()\lstart()\l}", shape="record", style="solid"];
"backtrader.filters.datafiller.DataFiller" [color="black", fontcolor="black", label="{DataFiller|params : tuple\l|preload()\lstart()\l}", shape="record", style="solid"];
"backtrader.filters.datafilter.DataFilter" [color="black", fontcolor="black", label="{DataFilter|params : tuple\l|preload()\l}", shape="record", style="solid"];
"backtrader.dataseries.DataSeries" [color="black", fontcolor="black", label="{DataSeries|Close\lDateTime\lHigh\lLineOrder : list\lLow\lOpen\lOpenInterest\lVolume\lplotinfo : dict\l|getwriterheaders()\lgetwriterinfo()\lgetwritervalues()\l}", shape="record", style="solid"];
"backtrader.observers.trades.DataTrades" [color="black", fontcolor="black", label="{DataTrades|params : tuple\lplotinfo : dict\lplotlines : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.filters.bsplitter.DaySplitter_Close" [color="black", fontcolor="black", label="{DaySplitter_Close|lastdt : NoneType\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.pivotpoint.DemarkPivotPoint" [color="black", fontcolor="black", label="{DemarkPivotPoint|lines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.dpo.DetrendedPriceOscillator" [color="black", fontcolor="black", label="{DetrendedPriceOscillator|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.dma.DicksonMovingAverage" [color="black", fontcolor="black", label="{DicksonMovingAverage|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.DirectionalIndicator" [color="black", fontcolor="black", label="{DirectionalIndicator|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.DirectionalMovement" [color="black", fontcolor="black", label="{DirectionalMovement|alias : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.DirectionalMovementIndex" [color="black", fontcolor="black", label="{DirectionalMovementIndex|alias : tuple\l|}", shape="record", style="solid"];
"backtrader.functions.DivByZero" [color="black", fontcolor="black", label="{DivByZero|a\lb\lzero : float\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.functions.DivZeroByZero" [color="black", fontcolor="black", label="{DivZeroByZero|a\lb\ldual : float\lsingle : float\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.utils.autodict.DotDict" [color="black", fontcolor="black", label="{DotDict|\l|}", shape="record", style="solid"];
"backtrader.indicators.dema.DoubleExponentialMovingAverage" [color="black", fontcolor="black", label="{DoubleExponentialMovingAverage|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.DownDay" [color="black", fontcolor="black", label="{DownDay|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.DownDayBool" [color="black", fontcolor="black", label="{DownDayBool|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.DownMove" [color="black", fontcolor="black", label="{DownMove|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.analyzers.drawdown.DrawDown" [color="black", fontcolor="black", label="{DrawDown|params : tuple\lrets\l|create_analysis()\lnext()\lnotify_fund(cash, value, fundvalue, shares)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.observers.drawdown.DrawDown" [color="black", fontcolor="black", label="{DrawDown|lines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.observers.drawdown.DrawDownLength" [color="black", fontcolor="black", label="{DrawDownLength|lines : tuple\lplotinfo : dict\lplotlines : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.observers.drawdown.DrawDown_Old" [color="black", fontcolor="black", label="{DrawDown_Old|lines : tuple\lmaxdd : float\lpeak : float\lplotinfo : dict\lplotlines : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.indicators.envelope.Envelope" [color="black", fontcolor="black", label="{Envelope|\l|}", shape="record", style="solid"];
"backtrader.indicators.envelope.EnvelopeMixIn" [color="black", fontcolor="black", label="{EnvelopeMixIn|lines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.ema.ExponentialMovingAverage" [color="black", fontcolor="black", label="{ExponentialMovingAverage|alias : tuple\lalpha\lalpha1\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.ExponentialSmoothing" [color="black", fontcolor="black", label="{ExponentialSmoothing|alias : tuple\lalpha\lalpha1\lparams : tuple\l|next()\lnextstart()\lonce(start, end)\loncestart(start, end)\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.ExponentialSmoothingDynamic" [color="black", fontcolor="black", label="{ExponentialSmoothingDynamic|alias : tuple\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.feed.FeedBase" [color="black", fontcolor="black", label="{FeedBase|datas : list\lparams\l|getdata(dataname, name)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.indicators.pivotpoint.FibonacciPivotPoint" [color="black", fontcolor="black", label="{FibonacciPivotPoint|lines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.flt.Filter" [color="black", fontcolor="black", label="{Filter|\l|next(data)\lnextstart(data)\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.FindFirstIndex" [color="black", fontcolor="black", label="{FindFirstIndex|lines : tuple\lparams : tuple\l|func(iterable)\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.FindFirstIndexHighest" [color="black", fontcolor="black", label="{FindFirstIndexHighest|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.FindFirstIndexLowest" [color="black", fontcolor="black", label="{FindFirstIndexLowest|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.FindLastIndex" [color="black", fontcolor="black", label="{FindLastIndex|lines : tuple\lparams : tuple\l|func(iterable)\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.FindLastIndexHighest" [color="black", fontcolor="black", label="{FindLastIndexHighest|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.FindLastIndexLowest" [color="black", fontcolor="black", label="{FindLastIndexLowest|params : tuple\l|}", shape="record", style="solid"];
"backtrader.fillers.FixedBarPerc" [color="black", fontcolor="black", label="{FixedBarPerc|params : tuple\l|}", shape="record", style="solid"];
"backtrader.sizers.fixedsize.FixedReverser" [color="black", fontcolor="black", label="{FixedReverser|params : tuple\l|}", shape="record", style="solid"];
"backtrader.fillers.FixedSize" [color="black", fontcolor="black", label="{FixedSize|params : tuple\l|}", shape="record", style="solid"];
"backtrader.sizers.fixedsize.FixedSize" [color="black", fontcolor="black", label="{FixedSize|params : tuple\l|setsizing(stake)\l}", shape="record", style="solid"];
"backtrader.sizers.fixedsize.FixedSizeTarget" [color="black", fontcolor="black", label="{FixedSizeTarget|params : tuple\l|setsizing(stake)\l}", shape="record", style="solid"];
"backtrader.studies.contrib.fractal.Fractal" [color="black", fontcolor="black", label="{Fractal|lines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.errors.FromModuleImportError" [color="black", fontcolor="red", label="{FromModuleImportError|\l|}", shape="record", style="solid"];
"backtrader.observers.broker.FundShares" [color="black", fontcolor="black", label="{FundShares|lines : tuple\lplotinfo : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.observers.broker.FundValue" [color="black", fontcolor="black", label="{FundValue|alias : tuple\llines : tuple\lplotinfo : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.feeds.csvgeneric.GenericCSV" [color="black", fontcolor="black", label="{GenericCSV|DataCls\l|}", shape="record", style="solid"];
"backtrader.feeds.csvgeneric.GenericCSVData" [color="black", fontcolor="black", label="{GenericCSVData|params : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.analyzers.leverage.GrossLeverage" [color="black", fontcolor="black", label="{GrossLeverage|params : tuple\l|next()\lnotify_fund(cash, value, fundvalue, shares)\lstart()\l}", shape="record", style="solid"];
"backtrader.filters.heikinashi.HeikinAshi" [color="black", fontcolor="black", label="{HeikinAshi|\l|}", shape="record", style="solid"];
"backtrader.indicators.heikinashi.HeikinAshi" [color="black", fontcolor="black", label="{HeikinAshi|linealias : tuple\llines : tuple\lplotinfo : dict\l|prenext()\l}", shape="record", style="solid"];
"backtrader.indicators.basicops.Highest" [color="black", fontcolor="black", label="{Highest|alias : tuple\lfunc\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.hma.HullMovingAverage" [color="black", fontcolor="black", label="{HullMovingAverage|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.hurst.HurstExponent" [color="black", fontcolor="black", label="{HurstExponent|alias : tuple\lfrompackages : tuple\llags\llines : tuple\llog10lags\lparams : tuple\l|next()\l}", shape="record", style="solid"];
"backtrader.brokers.ibbroker.IBBroker" [color="black", fontcolor="black", label="{IBBroker|CANCELLED : str\lFILLED : str\lINACTIVE : str\lPENDINGCANCEL : str\lPENDINGSUBMIT : str\lPRESUBMITTED : str\lSUBMITTED : str\lcash : float\lexecutions : dict\lib\lnotifs : Queue\lorderbyid : dict\lordstatus : defaultdict\lparams : tuple\lstartingcash : float\lstartingvalue : float\ltonotify : deque\lvalue : float\l|buy(owner, data, size, price, plimit, exectype, valid, tradeid)\lcancel(order)\lget_notification()\lgetcash()\lgetcommissioninfo(data)\lgetposition(data, clone)\lgetvalue(datas)\lnext()\lnotify(order)\lorderstatus(order)\lpush_commissionreport(cr)\lpush_execution(ex)\lpush_ordererror(msg)\lpush_orderstate(msg)\lpush_orderstatus(msg)\lpush_portupdate()\lsell(owner, data, size, price, plimit, exectype, valid, tradeid)\lstart()\lstop()\lsubmit(order)\l}", shape="record", style="solid"];
"backtrader.brokers.ibbroker.IBCommInfo" [color="black", fontcolor="black", label="{IBCommInfo|\l|getoperationcost(size, price)\lgetvaluesize(size, price)\l}", shape="record", style="solid"];
"backtrader.feeds.ibdata.IBData" [color="black", fontcolor="black", label="{IBData|RTBAR_MINSIZE : tuple\lcontract : NoneType\lcontractdetails : NoneType\lib\lparams : tuple\lprecontract : NoneType\lpretradecontract : NoneType\lqhist : NoneType\lqlive\ltradecontract : NoneType\ltradecontractdetails : NoneType\l|canceldata()\lhaslivedata()\lislive()\lparsecontract(dataname)\lreqdata()\lsetenvironment(env)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.brokers.ibbroker.IBOrder" [color="black", fontcolor="black", label="{IBOrder|m_action : bytes, str\lm_auxPrice : float\lm_goodTillDate : bytes, str\lm_lmtPrice : float\lm_ocaType : int\lm_orderType\lm_parentId\lm_permid : int\lm_tif : str, bytes\lm_totalQuantity\lm_trailStopPrice\lm_trailingPercent\lm_transmit\lordtype\l|}", shape="record", style="solid"];
"backtrader.brokers.ibbroker.IBOrderState" [color="black", fontcolor="black", label="{IBOrderState|\l|}", shape="record", style="solid"];
"backtrader.stores.ibstore.IBStore" [color="black", fontcolor="black", label="{IBStore|REQIDBASE : int\lacc_cash\lacc_upds\lacc_value\lbroker : NoneType\lccount : int\lcdetails : defaultdict\lclientId : int\lconn\ldatas : list\ldontreconnect : bool\lhistexreq : dict\lhistfmt : dict\lhistsend : dict\lhisttz : dict\liscash : dict\lmanaged_accounts : list\lnotifs : Queue\lorderid : count, NoneType\lparams : tuple\lport_update : bool\lpositions : defaultdict\lqs : OrderedDict\lrevdur : defaultdict\ltmoffset : timedelta\lts : OrderedDict\l|accountDownloadEnd(msg)\lcalcduration(dtbegin, dtend)\lcalcdurations(dtbegin, dtend)\lcancelHistoricalData(q)\lcancelMktData(q)\lcancelOrder(orderid)\lcancelQueue(q, sendnone)\lcancelRealTimeBars(q)\lcommissionReport(msg)\lconnected()\lconnectionClosed(msg)\lcontractDetails(msg)\lcontractDetailsEnd(msg)\lcurrentTime(msg)\ldt_plus_duration(dt, duration)\lerror(msg)\lexecDetails(msg)\lgetContractDetails(contract, maxcount)\lgetTickerQueue(start)\lget_acc_cash(account)\lget_acc_value(account)\lget_acc_values(account)\lget_notifications()\lgetbroker()\lgetdata()\lgetdurations(timeframe, compression)\lgetmaxduration(timeframe, compression)\lgetposition(contract, clone)\lhistduration(dt1, dt2)\lhistoricalData(msg)\llogmsg()\lmakecontract(symbol, sectype, exch, curr, expiry, strike, right, mult)\lmanagedAccounts(msg)\lnextOrderId()\lnextTickerId()\lnextValidId(msg)\lopenOrder(msg)\lorderStatus(msg)\lplaceOrder(orderid, contract, order)\lposition(msg)\lrealtimeBar(msg)\lreconnect(fromstart, resub)\lreqAccountUpdates(subscribe, account)\lreqContractDetails(contract)\lreqCurrentTime()\lreqHistoricalData(contract, enddate, duration, barsize, what, useRTH, tz, sessionend)\lreqHistoricalDataEx(contract, enddate, begindate, timeframe, compression, what, useRTH, tz, sessionend, tickerId)\lreqMktData(contract, what)\lreqPositions()\lreqRealTimeBars(contract, useRTH, duration)\lreuseQueue(tickerId)\lstart(data, broker)\lstartdatas()\lstop()\lstopdatas()\ltfcomp_to_size(timeframe, compression)\ltickPrice(msg)\ltickString(msg)\ltimeoffset()\lupdateAccountValue(msg)\lupdatePortfolio(msg)\lvalidQueue(q)\lwatcher(msg)\l}", shape="record", style="solid"];
"backtrader.indicators.ichimoku.Ichimoku" [color="black", fontcolor="black", label="{Ichimoku|lines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.functions.If" [color="black", fontcolor="black", label="{If|a\lb\lcond\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.indicator.Indicator" [color="black", fontcolor="black", label="{Indicator|csv : bool\l|advance(size)\lonce_via_next(start, end)\loncestart_via_nextstart(start, end)\lpreonce_via_prenext(start, end)\l}", shape="record", style="solid"];
"backtrader.lineiterator.IndicatorBase" [color="black", fontcolor="black", label="{IndicatorBase|\l|}", shape="record", style="solid"];
"backtrader.feeds.influxfeed.InfluxDB" [color="black", fontcolor="black", label="{InfluxDB|biter\lfrompackages : tuple\lndb\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.metabase.ItemCollection" [color="black", fontcolor="black", label="{ItemCollection|\l|append(item, name)\lgetbyname(name)\lgetitems()\lgetnames()\l}", shape="record", style="solid"];
"backtrader.indicators.kst.KnowSureThing" [color="black", fontcolor="black", label="{KnowSureThing|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.lrsi.LaguerreFilter" [color="black", fontcolor="black", label="{LaguerreFilter|alias : tuple\ll0\ll0 : float\ll1\ll1 : float\ll2\ll2 : float\ll3\ll3 : float\llines : tuple\lparams : tuple\lplotinfo : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.indicators.lrsi.LaguerreRSI" [color="black", fontcolor="black", label="{LaguerreRSI|alias : tuple\ll0\ll0 : float\ll1\ll1 : float\ll2\ll2 : float\ll3\ll3 : float\llines : tuple\lparams : tuple\lplotinfo : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.linebuffer.LineActions" [color="black", fontcolor="black", label="{LineActions|\l|arrayize(obj)\lgetindicators()\lqbuffer(savemem)\l}", shape="record", style="solid"];
"backtrader.lineseries.LineAlias" [color="black", fontcolor="black", label="{LineAlias|line\l|}", shape="record", style="solid"];
"backtrader.linebuffer.LineBuffer" [color="black", fontcolor="black", label="{LineBuffer|QBuffer : int\lUnBounded : int\larray : array, deque\lbind2line\lbindings : list\lextension : int\lextrasize : int\lidx\lidx : int\llencount : int\llenmark\llines : list\lmaxlen\lmode : int\luseislice : bool\l|addbinding(binding)\ladvance(size)\lbackwards(size, force)\lbind2lines(binding)\lbuflen()\ldate(ago, tz, naive)\ldatetime(ago, tz, naive)\ldt(ago)\lextend(value, size)\lforward(value, size)\lget(ago, size)\lget_idx()\lgetindicators()\lgetzero(idx, size)\lgetzeroval(idx)\lhome()\lminbuffer(size)\loncebinding()\lplot(idx, size)\lplotrange(start, end)\lqbuffer(savemem, extrasize)\lreset()\lrewind(size)\lset(value, ago)\lset_idx(idx, force)\ltime(ago, tz, naive)\ltm(ago)\ltm2datetime(tm, ago)\ltm2dtime(tm, ago)\ltm_eq(other, ago)\ltm_ge(other, ago)\ltm_gt(other, ago)\ltm_le(other, ago)\ltm_lt(other, ago)\ltm_raw(ago)\l}", shape="record", style="solid"];
"backtrader.lineiterator.LineIterator" [color="black", fontcolor="black", label="{LineIterator|bind2line\lbind2lines\lplotinfo : dict\l|addindicator(indicator)\lbindlines(owner, own)\lgetindicators()\lgetindicators_lines()\lgetobservers()\lnext()\lnextstart()\lonce(start, end)\loncestart(start, end)\lprenext()\lpreonce(start, end)\lqbuffer(savemem)\l}", shape="record", style="solid"];
"backtrader.lineroot.LineMultiple" [color="black", fontcolor="black", label="{LineMultiple|\l|addminperiod(minperiod)\lincminperiod(minperiod)\lminbuffer(size)\lqbuffer(savemem)\lreset()\l}", shape="record", style="solid"];
"backtrader.plot.finance.LineOnClosePlotHandler" [color="black", fontcolor="black", label="{LineOnClosePlotHandler|alpha : float\lcolor : str\llegend_closes : list\lloc : Line2D\l|barcollection(xs, closes, width, label, scaling, bot)\llegend_artist(legend, orig_handle, fontsize, handlebox)\l}", shape="record", style="solid"];
"backtrader.linebuffer.LineOwnOperation" [color="black", fontcolor="black", label="{LineOwnOperation|a\loperation\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.indicator.LinePlotterIndicator" [color="black", fontcolor="black", label="{LinePlotterIndicator|\l|}", shape="record", style="solid"];
"backtrader.lineroot.LineRoot" [color="black", fontcolor="black", label="{LineRoot|IndType\lObsType\lStratType\l|addminperiod(minperiod)\lincminperiod(minperiod)\lminbuffer(size)\lnext()\lnextstart()\lonce(start, end)\loncestart(start, end)\lprenext()\lpreonce(start, end)\lqbuffer(savemem)\lsetminperiod(minperiod)\lupdateminperiod(minperiod)\l}", shape="record", style="solid"];
"backtrader.lineseries.LineSeries" [color="black", fontcolor="black", label="{LineSeries|array\lcsv : bool\lplotinfo : dict\l|advance(size)\lbackwards(size, force)\lextend(value, size)\lforward(value, size)\lhome()\lplotlabel()\lreset()\lrewind(size)\l}", shape="record", style="solid"];
"backtrader.lineseries.LineSeriesStub" [color="black", fontcolor="black", label="{LineSeriesStub|extralines : int\llines\lowner\lslave : bool\l|advance(size)\lbackwards(size, force)\lextend(value, size)\lforward(value, size)\lhome()\lminbuffer(size)\lqbuffer()\lreset()\lrewind(size)\l}", shape="record", style="solid"];
"backtrader.lineroot.LineSingle" [color="black", fontcolor="black", label="{LineSingle|\l|addminperiod(minperiod)\lincminperiod(minperiod)\l}", shape="record", style="solid"];
"backtrader.lineseries.Lines" [color="black", fontcolor="black", label="{Lines|lines : list\l|advance(size)\lbackwards(size, force)\lbuflen(line)\lextend(value, size)\lextrasize()\lforward(value, size)\lfullsize()\lget(ago, size, line)\lgetlinealiases()\lhome()\litersize()\lreset()\lrewind(size)\lsize()\l}", shape="record", style="solid"];
"backtrader.linebuffer.LinesOperation" [color="black", fontcolor="black", label="{LinesOperation|a\lb\lbfloat\lbline\lbtime\loperation\lr : bool\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.functions.List" [color="black", fontcolor="black", label="{List|\l|}", shape="record", style="solid"];
"backtrader.observers.logreturns.LogReturns" [color="black", fontcolor="black", label="{LogReturns|lines : tuple\llogret1\lparams : tuple\lplotinfo : dict\l|next()\l}", shape="record", style="solid"];
"backtrader.observers.logreturns.LogReturns2" [color="black", fontcolor="black", label="{LogReturns2|lines : tuple\llogret2\l|next()\l}", shape="record", style="solid"];
"backtrader.analyzers.logreturnsrolling.LogReturnsRolling" [color="black", fontcolor="black", label="{LogReturnsRolling|params : tuple\l|next()\lnotify_fund(cash, value, fundvalue, shares)\lstart()\l}", shape="record", style="solid"];
"backtrader.functions.Logic" [color="black", fontcolor="black", label="{Logic|args\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.Lowest" [color="black", fontcolor="black", label="{Lowest|alias : tuple\lfunc\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.macd.MACD" [color="black", fontcolor="black", label="{MACD|lines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.macd.MACDHisto" [color="black", fontcolor="black", label="{MACDHisto|alias : tuple\llines : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.strategies.sma_crossover.MA_CrossOver" [color="black", fontcolor="black", label="{MA_CrossOver|alias : tuple\lbuysig\lparams : tuple\l|next()\l}", shape="record", style="solid"];
"backtrader.feeds.mt4csv.MT4CSVData" [color="black", fontcolor="black", label="{MT4CSVData|params : tuple\l|}", shape="record", style="solid"];
"backtrader.functions.Max" [color="black", fontcolor="black", label="{Max|flogic\l|}", shape="record", style="solid"];
"backtrader.indicators.deviation.MeanDeviation" [color="black", fontcolor="black", label="{MeanDeviation|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.feed.MetaAbstractDataBase" [color="black", fontcolor="black", label="{MetaAbstractDataBase|\l|dopostinit(_obj)\ldopreinit(_obj)\l}", shape="record", style="solid"];
"backtrader.analyzer.MetaAnalyzer" [color="black", fontcolor="black", label="{MetaAnalyzer|\l|donew()\ldopostinit(_obj)\l}", shape="record", style="solid"];
"backtrader.metabase.MetaBase" [color="black", fontcolor="black", label="{MetaBase|\l|doinit(_obj)\ldonew()\ldopostinit(_obj)\ldopreinit(_obj)\ldoprenew()\l}", shape="record", style="solid"];
"backtrader.broker.MetaBroker" [color="black", fontcolor="black", label="{MetaBroker|\l|}", shape="record", style="solid"];
"backtrader.feed.MetaCSVDataBase" [color="black", fontcolor="black", label="{MetaCSVDataBase|\l|dopostinit(_obj)\l}", shape="record", style="solid"];
"backtrader.feeds.chainer.MetaChainer" [color="black", fontcolor="black", label="{MetaChainer|\l|donew()\l}", shape="record", style="solid"];
"backtrader.observers.trades.MetaDataTrades" [color="black", fontcolor="black", label="{MetaDataTrades|\l|donew()\l}", shape="record", style="solid"];
"backtrader.flt.MetaFilter" [color="black", fontcolor="black", label="{MetaFilter|\l|}", shape="record", style="solid"];
"backtrader.brokers.ibbroker.MetaIBBroker" [color="black", fontcolor="black", label="{MetaIBBroker|\l|}", shape="record", style="solid"];
"backtrader.feeds.ibdata.MetaIBData" [color="black", fontcolor="black", label="{MetaIBData|\l|}", shape="record", style="solid"];
"backtrader.indicator.MetaIndicator" [color="black", fontcolor="black", label="{MetaIndicator|\l|cleancache()\lusecache(onoff)\l}", shape="record", style="solid"];
"backtrader.linebuffer.MetaLineActions" [color="black", fontcolor="black", label="{MetaLineActions|\l|cleancache()\ldopostinit(_obj)\ldopreinit(_obj)\lusecache(onoff)\l}", shape="record", style="solid"];
"backtrader.lineiterator.MetaLineIterator" [color="black", fontcolor="black", label="{MetaLineIterator|\l|donew()\ldopostinit(_obj)\ldopreinit(_obj)\l}", shape="record", style="solid"];
"backtrader.lineroot.MetaLineRoot" [color="black", fontcolor="black", label="{MetaLineRoot|\l|donew()\l}", shape="record", style="solid"];
"backtrader.lineseries.MetaLineSeries" [color="black", fontcolor="black", label="{MetaLineSeries|linealias\llines\lplotinfo\lplotlines\l|donew()\l}", shape="record", style="solid"];
"backtrader.indicators.mabase.MetaMovAvBase" [color="black", fontcolor="black", label="{MetaMovAvBase|\l|}", shape="record", style="solid"];
"backtrader.brokers.oandabroker.MetaOandaBroker" [color="black", fontcolor="black", label="{MetaOandaBroker|\l|}", shape="record", style="solid"];
"backtrader.feeds.oanda.MetaOandaData" [color="black", fontcolor="black", label="{MetaOandaData|\l|}", shape="record", style="solid"];
"backtrader.observer.MetaObserver" [color="black", fontcolor="black", label="{MetaObserver|\l|donew()\ldopreinit(_obj)\l}", shape="record", style="solid"];
"backtrader.metabase.MetaParams" [color="black", fontcolor="black", label="{MetaParams|frompackages\lpackages\lparams\l|donew()\l}", shape="record", style="solid"];
"backtrader.feeds.rollover.MetaRollOver" [color="black", fontcolor="black", label="{MetaRollOver|\l|donew()\l}", shape="record", style="solid"];
"backtrader.strategy.MetaSigStrategy" [color="black", fontcolor="black", label="{MetaSigStrategy|next\l|dopostinit(_obj)\ldopreinit(_obj)\l}", shape="record", style="solid"];
"backtrader.store.MetaSingleton" [color="black", fontcolor="black", label="{MetaSingleton|\l|}", shape="record", style="solid"];
"backtrader.stores.ibstore.MetaSingleton" [color="black", fontcolor="black", label="{MetaSingleton|\l|}", shape="record", style="solid"];
"backtrader.stores.oandastore.MetaSingleton" [color="black", fontcolor="black", label="{MetaSingleton|\l|}", shape="record", style="solid"];
"backtrader.stores.vcstore.MetaSingleton" [color="black", fontcolor="black", label="{MetaSingleton|\l|}", shape="record", style="solid"];
"backtrader.strategy.MetaStrategy" [color="black", fontcolor="black", label="{MetaStrategy|\l|donew()\ldopostinit(_obj)\ldopreinit(_obj)\l}", shape="record", style="solid"];
"backtrader.analyzer.MetaTimeFrameAnalyzerBase" [color="black", fontcolor="black", label="{MetaTimeFrameAnalyzerBase|\l|}", shape="record", style="solid"];
"backtrader.brokers.vcbroker.MetaVCBroker" [color="black", fontcolor="black", label="{MetaVCBroker|\l|}", shape="record", style="solid"];
"backtrader.feeds.vcdata.MetaVCData" [color="black", fontcolor="black", label="{MetaVCData|\l|}", shape="record", style="solid"];
"backtrader.feeds.vchartfile.MetaVChartFile" [color="black", fontcolor="black", label="{MetaVChartFile|\l|}", shape="record", style="solid"];
"backtrader.functions.Min" [color="black", fontcolor="black", label="{Min|flogic\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.MinusDirectionalIndicator" [color="black", fontcolor="black", label="{MinusDirectionalIndicator|alias : tuple\llines : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.errors.ModuleImportError" [color="black", fontcolor="red", label="{ModuleImportError|args : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.momentum.Momentum" [color="black", fontcolor="black", label="{Momentum|lines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.momentum.MomentumOscillator" [color="black", fontcolor="black", label="{MomentumOscillator|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.mabase.MovAv" [color="black", fontcolor="black", label="{MovAv|\l|}", shape="record", style="solid"];
"backtrader.indicators.mabase.MovingAverage" [color="black", fontcolor="black", label="{MovingAverage|\l|register(regcls)\l}", shape="record", style="solid"];
"backtrader.indicators.mabase.MovingAverageBase" [color="black", fontcolor="black", label="{MovingAverageBase|params : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.sma.MovingAverageSimple" [color="black", fontcolor="black", label="{MovingAverageSimple|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicator.MtLinePlotterIndicator" [color="black", fontcolor="black", label="{MtLinePlotterIndicator|\l|donew()\l}", shape="record", style="solid"];
"backtrader.lineiterator.MultiCoupler" [color="black", fontcolor="black", label="{MultiCoupler|dlen : int\ldsize\ldvals\l|next()\l}", shape="record", style="solid"];
"backtrader.plot.multicursor.MultiCursor" [color="black", fontcolor="black", label="{MultiCursor|axes\lbackground : NoneType\lcanvas\lhlines : list\lhorizMulti : bool\lhorizOn : bool\lneedclear : bool\luseblit\lvertMulti : bool\lvertOn : bool\lvisible : bool\lvlines : list\l|clear(event)\lconnect()\ldisconnect()\lonmove(event)\l}", shape="record", style="solid"];
"backtrader.plot.multicursor.MultiCursor2" [color="black", fontcolor="black", label="{MultiCursor2|axes\lbackground : NoneType\lcanvas\lhlines : list\lhorizOn : bool\lneedclear : bool\luseblit\lvertOn : bool\lvisible : bool\lvlines : list\l|clear(event)\lconnect()\ldisconnect()\lonmove(event)\l}", shape="record", style="solid"];
"backtrader.functions.MultiLogic" [color="black", fontcolor="black", label="{MultiLogic|\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.functions.MultiLogicReduce" [color="black", fontcolor="black", label="{MultiLogicReduce|flogic : partial\l|}", shape="record", style="solid"];
"backtrader.plot.formatters.MyDateFormatter" [color="black", fontcolor="black", label="{MyDateFormatter|dates\lfmt : str\llendates\l|}", shape="record", style="solid"];
"backtrader.plot.formatters.MyVolFormatter" [color="black", fontcolor="black", label="{MyVolFormatter|Suffixes : list\ldivisor : float\lsuffix : str\lvolmax\l|}", shape="record", style="solid"];
"backtrader.indicators.crossover.NonZeroDifference" [color="black", fontcolor="black", label="{NonZeroDifference|alias : tuple\llines : tuple\l|next()\lnextstart()\lonce(start, end)\loncestart(start, end)\l}", shape="record", style="solid"];
"backtrader.dataseries.OHLC" [color="black", fontcolor="black", label="{OHLC|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.dataseries.OHLCDateTime" [color="black", fontcolor="black", label="{OHLCDateTime|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.plot.finance.OHLCPlotHandler" [color="black", fontcolor="black", label="{OHLCPlotHandler|barcol : LineCollection\lclosecol : LineCollection\lcolordown : tuple\lcolorup : tuple\llegend_closes : list\llegend_highs : list\llegend_lows : list\llegend_opens : list\lopencol : LineCollection\l|barcollection(xs, opens, highs, lows, closes, width, tickwidth, label, scaling, bot)\llegend_artist(legend, orig_handle, fontsize, handlebox)\l}", shape="record", style="solid"];
"backtrader.indicators.ols.OLS_BetaN" [color="black", fontcolor="black", label="{OLS_BetaN|lines : tuple\lpackages : tuple\lparams : tuple\l|next()\l}", shape="record", style="solid"];
"backtrader.indicators.ols.OLS_Slope_InterceptN" [color="black", fontcolor="black", label="{OLS_Slope_InterceptN|lines : tuple\lpackages : tuple\lparams : tuple\l|next()\l}", shape="record", style="solid"];
"backtrader.indicators.ols.OLS_TransformationN" [color="black", fontcolor="black", label="{OLS_TransformationN|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.brokers.oandabroker.OandaBroker" [color="black", fontcolor="black", label="{OandaBroker|brackets : dict\lcash : float\lnotifs : deque\lo\lopending : defaultdict\lorders : OrderedDict\lparams : tuple\lpositions : defaultdict\lstartingcash : float\lstartingvalue : float\lvalue : float\l|buy(owner, data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent, parent, transmit)\lcancel(order)\ldata_started(data)\lget_notification()\lgetcash()\lgetposition(data, clone)\lgetvalue(datas)\lnext()\lnotify(order)\lorderstatus(order)\lsell(owner, data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent, parent, transmit)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.brokers.oandabroker.OandaCommInfo" [color="black", fontcolor="black", label="{OandaCommInfo|\l|getoperationcost(size, price)\lgetvaluesize(size, price)\l}", shape="record", style="solid"];
"backtrader.feeds.oanda.OandaData" [color="black", fontcolor="black", label="{OandaData|contractdetails\lo\lparams : tuple\lqhist\lqlive : Queue\l|haslivedata()\lislive()\lsetenvironment(env)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.stores.oandastore.OandaNetworkError" [color="black", fontcolor="black", label="{OandaNetworkError|\l|}", shape="record", style="solid"];
"backtrader.stores.oandastore.OandaRequestError" [color="black", fontcolor="black", label="{OandaRequestError|\l|}", shape="record", style="solid"];
"backtrader.stores.oandastore.OandaStore" [color="black", fontcolor="black", label="{OandaStore|broker : NoneType\lcash : NoneType\ldatas : list\lnotifs : deque\loapi\lparams : tuple\lq_account : Queue\lq_orderclose : Queue\lq_ordercreate : Queue\l|broker_threads()\lcandles(dataname, dtbegin, dtend, timeframe, compression, candleFormat, includeFirst)\lget_cash()\lget_granularity(timeframe, compression)\lget_instrument(dataname)\lget_notifications()\lget_positions()\lget_value()\lgetbroker()\lgetdata()\lorder_cancel(order)\lorder_create(order, stopside, takeside)\lput_notification(msg)\lstart(data, broker)\lstop()\lstreaming_events(tmout)\lstreaming_prices(dataname, tmout)\l}", shape="record", style="solid"];
"backtrader.stores.oandastore.OandaStreamError" [color="black", fontcolor="black", label="{OandaStreamError|\l|}", shape="record", style="solid"];
"backtrader.stores.oandastore.OandaTimeFrameError" [color="black", fontcolor="black", label="{OandaTimeFrameError|\l|}", shape="record", style="solid"];
"backtrader.observer.Observer" [color="black", fontcolor="black", label="{Observer|csv : bool\lplotinfo : dict\l|prenext()\lstart()\l}", shape="record", style="solid"];
"backtrader.lineiterator.ObserverBase" [color="black", fontcolor="black", label="{ObserverBase|\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.OperationN" [color="black", fontcolor="black", label="{OperationN|\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.cerebro.OptReturn" [color="black", fontcolor="black", label="{OptReturn|p\lparams\l|}", shape="record", style="solid"];
"backtrader.functions.Or" [color="black", fontcolor="black", label="{Or|flogic : staticmethod\l|}", shape="record", style="solid"];
"backtrader.order.Order" [color="black", fontcolor="black", label="{Order|status\l|execute(dt, size, price, closed, closedvalue, closedcomm, opened, openedvalue, openedcomm, margin, pnl, psize, pprice)\lexpire()\ltrailadjust(price)\l}", shape="record", style="solid"];
"backtrader.order.OrderBase" [color="black", fontcolor="black", label="{OrderBase|Accepted\lBuy\lCanceled\lCancelled\lClose\lCompleted\lCreated\lDAY : timedelta\lExecTypes : list\lExpired\lHistorical\lLimit\lMargin\lMarket\lOrdTypes : list\lPartial\lRejected\lSell\lStatus : list\lStop\lStopLimit\lStopTrail\lStopTrailLimit\lSubmitted\lT_Close\lT_Date\lT_Day\lT_None\lV_None : range\lbroker : NoneType\lcomminfo : NoneType\lcreated\ldteos : float\lexectype\lexecuted\linfo\lparams : tuple\lplen\lplimit\lplimit\lposition : int\lref\lrefbasis : count\lsize\lstatus\ltriggered : bool\lvalid\l|ExecType(exectype)\laccept(broker)\lactivate()\lactive()\laddcomminfo(comminfo)\laddinfo()\lalive()\lbrokerstatus()\lcancel()\lclone()\lcompleted()\lexecute(dt, size, price, closed, closedvalue, closedcomm, opened, openedvalue, openedcomm, margin, pnl, psize, pprice)\lexpire()\lgetordername(exectype)\lgetstatusname(status)\lisbuy()\lissell()\lmargin()\lordtypename(ordtype)\lpartial()\lreject(broker)\lsetposition(position)\lsubmit(broker)\ltrailadjust(price)\l}", shape="record", style="solid"];
"backtrader.order.OrderData" [color="black", fontcolor="black", label="{OrderData|comm : float\ldt : NoneType\lexbits : deque\lmargin : NoneType\lp1 : int\lp2 : int\lpclose : float\lplimit\lplimit : float\lpnl : float\lpprice : int\lprice : float\lpricelimit : float\lpsize : int\lremsize : int\lsize : int\ltrailamount : float\ltrailpercent : float\lvalue : float\l|add(dt, size, price, closed, closedvalue, closedcomm, opened, openedvalue, openedcomm, pnl, psize, pprice)\laddbit(exbit)\lclone()\lgetpending()\literpending()\lmarkpending()\l}", shape="record", style="solid"];
"backtrader.order.OrderExecutionBit" [color="black", fontcolor="black", label="{OrderExecutionBit|closed : int\lclosedcomm : float\lclosedvalue : float\lcomm : float\ldt : NoneType\lopened : int\lopenedcomm : float\lopenedvalue : float\lpnl : float\lpprice : float\lprice : float\lpsize : int\lsize : int\lvalue : float\l|}", shape="record", style="solid"];
"backtrader.utils.ordereddefaultdict.OrderedDefaultdict" [color="black", fontcolor="black", label="{OrderedDefaultdict|default_factory : NoneType\l|}", shape="record", style="solid"];
"backtrader.indicators.oscillator.Oscillator" [color="black", fontcolor="black", label="{Oscillator|dataosc\llines : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.oscillator.OscillatorMixIn" [color="black", fontcolor="black", label="{OscillatorMixIn|plotlines : dict\l|}", shape="record", style="solid"];
"backtrader.plot.plot.PInfo" [color="black", fontcolor="black", label="{PInfo|clock : NoneType\lcoloridx : defaultdict\lcursors : list\ldaxis : OrderedDict\lfigs : list\lhandles : defaultdict\llabels : defaultdict\llegpos : defaultdict\lnrows : int\lpend\lprop : FontProperties\lpsize\lpstart\lrow : int\lsch\lsharex : NoneType\lvaxis : list\lx : list, NoneType\lxdata : list, NoneType\lxend : int\lxlen : int\lxreal\lxstart : int\lzorder : dict\l|color(ax)\lnewfig(figid, numfig, mpyplot)\lnextcolor(ax)\lzordercur(ax)\lzordernext(ax)\l}", shape="record", style="solid"];
"backtrader.feeds.pandafeed.PandasData" [color="black", fontcolor="black", label="{PandasData|datafields : list\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.feeds.pandafeed.PandasDirectData" [color="black", fontcolor="black", label="{PandasDirectData|datafields : list\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.tradingcal.PandasMarketCalendar" [color="black", fontcolor="black", label="{PandasMarketCalendar|csize : timedelta\ldcache : DatetimeIndex\lidcache : DataFrame\lparams : tuple\l|schedule(day, tz)\l}", shape="record", style="solid"];
"backtrader.indicators.psar.ParabolicSAR" [color="black", fontcolor="black", label="{ParabolicSAR|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|next()\lnextstart()\lprenext()\l}", shape="record", style="solid"];
"backtrader.metabase.ParamsBase" [color="black", fontcolor="black", label="{ParamsBase|\l|}", shape="record", style="solid"];
"backtrader.indicators.percentchange.PercentChange" [color="black", fontcolor="black", label="{PercentChange|alias : tuple\llines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.percentrank.PercentRank" [color="black", fontcolor="black", label="{PercentRank|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.sizers.percents_sizer.PercentSizer" [color="black", fontcolor="black", label="{PercentSizer|params : tuple\l|}", shape="record", style="solid"];
"backtrader.sizers.percents_sizer.PercentSizerInt" [color="black", fontcolor="black", label="{PercentSizerInt|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.priceoscillator.PercentagePriceOscillator" [color="black", fontcolor="black", label="{PercentagePriceOscillator|alias : tuple\llines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.priceoscillator.PercentagePriceOscillatorShort" [color="black", fontcolor="black", label="{PercentagePriceOscillatorShort|alias : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.PeriodN" [color="black", fontcolor="black", label="{PeriodN|params : tuple\l|}", shape="record", style="solid"];
"backtrader.analyzers.periodstats.PeriodStats" [color="black", fontcolor="black", label="{PeriodStats|params : tuple\l|stop()\l}", shape="record", style="solid"];
"backtrader.indicators.pivotpoint.PivotPoint" [color="black", fontcolor="black", label="{PivotPoint|lines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.plot.scheme.PlotScheme" [color="black", fontcolor="black", label="{PlotScheme|baralpha : float\lbardown : str\lbardownfill : bool\lbartrans : float\lbarup : str\lbarupfill : bool\lfillalpha : float\lfmt_x_data : NoneType\lfmt_x_ticks : str\lgrid : bool\lhlinescolor : str\lhlinesstyle : str\lhlineswidth : float\llcolors : list\llegenddataloc : str\llegendind : bool\llegendindloc : str\llegendtrans : float\llinevalues : bool\lloc : str\lplotdist : float\lrowsmajor : int\lrowsminor : int\lstyle : str\lsubtxtsize : int\lsubtxttrans : float\ltickrotation : int\lvaluetags : bool\lvoldown : str\lvoloverlay : bool\lvolpushup : float\lvolscaling : float\lvoltrans : float\lvolume : bool\lvolup : str\lyadjust : float\lytight : bool\lzdown : bool\l|color(idx)\l}", shape="record", style="solid"];
"backtrader.plot.plot.Plot_OldSync" [color="black", fontcolor="black", label="{Plot_OldSync|dplotsdown : defaultdict\ldplotsover : defaultdict\ldplotstop : list\ldplotsup : defaultdict\lmpyplot\lparams : tuple\lpinf\l|calcrows(strategy)\ldrawtag(ax, x, y, facecolor, edgecolor, alpha)\lnewaxis(obj, rowspan)\lplot(strategy, figid, numfigs, iplot, start, end)\lplotdata(data, indicators)\lplotind(iref, ind, subinds, upinds, downinds, masterax)\lplotvolume(data, opens, highs, lows, closes, volumes, label)\lsavefig(fig, filename, width, height, dpi, tight)\lsetlocators(ax)\lshow()\lsortdataindicators(strategy)\l}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.PlusDirectionalIndicator" [color="black", fontcolor="black", label="{PlusDirectionalIndicator|alias : tuple\llines : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.position.Position" [color="black", fontcolor="black", label="{Position|adjbase : NoneType\ldatetime : NoneType\lprice : float\lprice_orig : float\lsize : int\lupclosed : int\lupdt : NoneType\lupopened : int\l|clone()\lfix(size, price)\lpseudoupdate(size, price)\lset(size, price)\lupdate(size, price, dt)\l}", shape="record", style="solid"];
"backtrader.analyzers.positions.PositionsValue" [color="black", fontcolor="black", label="{PositionsValue|params : tuple\l|next()\lstart()\l}", shape="record", style="solid"];
"backtrader.indicators.prettygoodoscillator.PrettyGoodOscillator" [color="black", fontcolor="black", label="{PrettyGoodOscillator|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.priceoscillator.PriceOscillator" [color="black", fontcolor="black", label="{PriceOscillator|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.linebuffer.PseudoArray" [color="black", fontcolor="black", label="{PseudoArray|array\lwrapped\l|}", shape="record", style="solid"];
"backtrader.analyzers.pyfolio.PyFolio" [color="black", fontcolor="black", label="{PyFolio|params : tuple\l|get_pf_items()\lstop()\l}", shape="record", style="solid"];
"backtrader.feeds.quandl.Quandl" [color="black", fontcolor="black", label="{Quandl|error : str, NoneType\lf : StringIO\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.feeds.quandl.QuandlCSV" [color="black", fontcolor="black", label="{QuandlCSV|f : StringIO\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.plot.locator.RRuleLocator" [color="black", fontcolor="black", label="{RRuleLocator|\l|datalim_to_dt()\ltick_values(vmin, vmax)\lviewlim_to_dt()\l}", shape="record", style="solid"];
"backtrader.indicators.rsi.RSI_EMA" [color="black", fontcolor="black", label="{RSI_EMA|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.RSI_SMA" [color="black", fontcolor="black", label="{RSI_SMA|alias : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.RSI_Safe" [color="black", fontcolor="black", label="{RSI_Safe|params : tuple\l|}", shape="record", style="solid"];
"backtrader.stores.vcstore.RTEventSink" [color="black", fontcolor="black", label="{RTEventSink|lastconn : NoneType\lstore\lvcrtmod\l|OnInternalEvent(p1, p2, p3)\lOnNewTicks(ArrayTicks)\lOnServerShutDown()\l}", shape="record", style="solid"];
"backtrader.stores.ibstore.RTVolume" [color="black", fontcolor="black", label="{RTVolume|datetime\lprice : NoneType\l|}", shape="record", style="solid"];
"backtrader.indicators.momentum.RateOfChange" [color="black", fontcolor="black", label="{RateOfChange|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.momentum.RateOfChange100" [color="black", fontcolor="black", label="{RateOfChange100|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.functions.Reduce" [color="black", fontcolor="black", label="{Reduce|flogic\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.ReduceN" [color="black", fontcolor="black", label="{ReduceN|func\lfunc\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rmi.RelativeMomentumIndex" [color="black", fontcolor="black", label="{RelativeMomentumIndex|alias : tuple\llinealias : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.RelativeStrengthIndex" [color="black", fontcolor="black", label="{RelativeStrengthIndex|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.filters.renko.Renko" [color="black", fontcolor="black", label="{Renko|params : tuple\l|next(data)\lnextstart(data)\l}", shape="record", style="solid"];
"backtrader.resamplerfilter.Replayer" [color="black", fontcolor="black", label="{Replayer|params : tuple\lreplaying : bool\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ReplayerDaily" [color="black", fontcolor="black", label="{ReplayerDaily|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ReplayerMinutes" [color="black", fontcolor="black", label="{ReplayerMinutes|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ReplayerMonthly" [color="black", fontcolor="black", label="{ReplayerMonthly|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ReplayerSeconds" [color="black", fontcolor="black", label="{ReplayerSeconds|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ReplayerTicks" [color="black", fontcolor="black", label="{ReplayerTicks|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ReplayerWeekly" [color="black", fontcolor="black", label="{ReplayerWeekly|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.Resampler" [color="black", fontcolor="black", label="{Resampler|params : tuple\lreplaying : bool\l|last(data)\l}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerDaily" [color="black", fontcolor="black", label="{ResamplerDaily|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerMinutes" [color="black", fontcolor="black", label="{ResamplerMinutes|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerMonthly" [color="black", fontcolor="black", label="{ResamplerMonthly|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerSeconds" [color="black", fontcolor="black", label="{ResamplerSeconds|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerTicks" [color="black", fontcolor="black", label="{ResamplerTicks|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerWeekly" [color="black", fontcolor="black", label="{ResamplerWeekly|params : tuple\l|}", shape="record", style="solid"];
"backtrader.resamplerfilter.ResamplerYearly" [color="black", fontcolor="black", label="{ResamplerYearly|params : tuple\l|}", shape="record", style="solid"];
"backtrader.analyzers.returns.Returns" [color="black", fontcolor="black", label="{Returns|params : tuple\l|start()\lstop()\l}", shape="record", style="solid"];
"backtrader.feeds.rollover.RollOver" [color="black", fontcolor="black", label="{RollOver|params : tuple\l|islive()\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.analyzers.sqn.SQN" [color="black", fontcolor="black", label="{SQN|alias : tuple\lcount : int\lpnl : list\lrets\l|create_analysis()\lnotify_trade(trade)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.order.SellOrder" [color="black", fontcolor="black", label="{SellOrder|ordtype\l|}", shape="record", style="solid"];
"backtrader.filters.session.SessionFiller" [color="black", fontcolor="black", label="{SessionFiller|MAXDATE : date, datetime\ldtime_prev\lparams : tuple\lseenbar : bool\lsessend : date, datetime\l|}", shape="record", style="solid"];
"backtrader.filters.session.SessionFilter" [color="black", fontcolor="black", label="{SessionFilter|\l|}", shape="record", style="solid"];
"backtrader.filters.session.SessionFilterSimple" [color="black", fontcolor="black", label="{SessionFilterSimple|\l|}", shape="record", style="solid"];
"backtrader.analyzers.sharpe.SharpeRatio" [color="black", fontcolor="black", label="{SharpeRatio|RATEFACTORS : dict\lanret\lparams : tuple\lratio : NoneType\ltimereturn\l|stop()\l}", shape="record", style="solid"];
"backtrader.analyzers.sharpe.SharpeRatio_A" [color="black", fontcolor="black", label="{SharpeRatio_A|params : tuple\l|}", shape="record", style="solid"];
"backtrader.feeds.sierrachart.SierraChartCSVData" [color="black", fontcolor="black", label="{SierraChartCSVData|params : tuple\l|}", shape="record", style="solid"];
"backtrader.signal.Signal" [color="black", fontcolor="black", label="{Signal|SignalTypes : list\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.strategy.SignalStrategy" [color="black", fontcolor="black", label="{SignalStrategy|params : tuple\l|signal_add(sigtype, signal)\l}", shape="record", style="solid"];
"backtrader.dataseries.SimpleFilterWrapper" [color="black", fontcolor="black", label="{SimpleFilterWrapper|args : list, tuple\lffilter\lkwargs : dict\l|}", shape="record", style="solid"];
"backtrader.lineiterator.SingleCoupler" [color="black", fontcolor="black", label="{SingleCoupler|cdata\ldlen : int\lval : float\l|next()\l}", shape="record", style="solid"];
"backtrader.sizer.Sizer" [color="black", fontcolor="black", label="{Sizer|broker\lbroker : NoneType\lstrategy\lstrategy : NoneType\l|getsizing(data, isbuy)\lset(strategy, broker)\l}", shape="record", style="solid"];
"backtrader.indicators.smma.SmoothedMovingAverage" [color="black", fontcolor="black", label="{SmoothedMovingAverage|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.deviation.StandardDeviation" [color="black", fontcolor="black", label="{StandardDeviation|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.utils.flushfile.StdOutDevNull" [color="black", fontcolor="black", label="{StdOutDevNull|stdout : StringIO, StreamWrapper\l|flush()\lstop()\lwrite(x)\l}", shape="record", style="solid"];
"backtrader.indicators.stochastic.Stochastic" [color="black", fontcolor="black", label="{Stochastic|alias : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.stochastic.StochasticFast" [color="black", fontcolor="black", label="{StochasticFast|\l|}", shape="record", style="solid"];
"backtrader.indicators.stochastic.StochasticFull" [color="black", fontcolor="black", label="{StochasticFull|lines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.order.StopBuyOrder" [color="black", fontcolor="black", label="{StopBuyOrder|\l|}", shape="record", style="solid"];
"backtrader.order.StopLimitBuyOrder" [color="black", fontcolor="black", label="{StopLimitBuyOrder|\l|}", shape="record", style="solid"];
"backtrader.order.StopLimitSellOrder" [color="black", fontcolor="black", label="{StopLimitSellOrder|\l|}", shape="record", style="solid"];
"backtrader.order.StopSellOrder" [color="black", fontcolor="black", label="{StopSellOrder|\l|}", shape="record", style="solid"];
"backtrader.store.Store" [color="black", fontcolor="black", label="{Store|BrokerCls : NoneType\lDataCls : NoneType\lbroker : NoneType\ldatas : list\lnotifs : deque\lparams : tuple\l|get_notifications()\lgetbroker()\lgetdata()\lput_notification(msg)\lstart(data, broker)\lstop()\l}", shape="record", style="solid"];
"backtrader.strategy.Strategy" [color="black", fontcolor="black", label="{Strategy|csv : bool\lindobscsv : list\llines : tuple\lposition\lpositionbyname\lpositions\lpositionsbyname\lsizer\l|add_timer(when, offset, repeat, weekdays, weekcarry, monthdays, monthcarry, allow, tzdata, cheat)\lbuy(data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent, parent, transmit)\lbuy_bracket(data, size, price, plimit, exectype, valid, tradeid, trailamount, trailpercent, oargs, stopprice, stopexec, stopargs, limitprice, limitexec, limitargs)\lcancel(order)\lclear()\lclose(data, size)\lgetdatabyname(name)\lgetdatanames()\lgetposition(data, broker)\lgetpositionbyname(name, broker)\lgetpositions(broker)\lgetpositionsbyname(broker)\lgetsizer()\lgetsizing(data, isbuy)\lgetwriterheaders()\lgetwriterinfo()\lgetwritervalues()\lnext_open()\lnextstart_open()\lnotify_cashvalue(cash, value)\lnotify_data(data, status)\lnotify_fund(cash, value, fundvalue, shares)\lnotify_order(order)\lnotify_store(msg)\lnotify_timer(timer, when)\lnotify_trade(trade)\lorder_target_percent(data, target)\lorder_target_size(data, target)\lorder_target_value(data, target, price)\lprenext_open()\lqbuffer(savemem, replaying)\lsell(data, size, price, plimit, exectype, valid, tradeid, oco, trailamount, trailpercent, parent, transmit)\lsell_bracket(data, size, price, plimit, exectype, valid, tradeid, trailamount, trailpercent, oargs, stopprice, stopexec, stopargs, limitprice, limitexec, limitargs)\lset_tradehistory(onoff)\lsetsizer(sizer)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.lineiterator.StrategyBase" [color="black", fontcolor="black", label="{StrategyBase|\l|}", shape="record", style="solid"];
"backtrader.errors.StrategySkipError" [color="black", fontcolor="red", label="{StrategySkipError|\l|}", shape="record", style="solid"];
"backtrader.stores.oandastore.Streamer" [color="black", fontcolor="black", label="{Streamer|connected : bool\lq\l|on_error(data)\lon_success(data)\lrun(endpoint, params)\l}", shape="record", style="solid"];
"backtrader.functions.Sum" [color="black", fontcolor="black", label="{Sum|flogic\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.SumN" [color="black", fontcolor="black", label="{SumN|func\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.analyzers.drawdown.TimeDrawDown" [color="black", fontcolor="black", label="{TimeDrawDown|dd : float\lddlen : int\lmaxdd : float\lmaxddlen : int\lparams : tuple\lpeak : float\l|on_dt_over()\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.dataseries.TimeFrame" [color="black", fontcolor="black", label="{TimeFrame|Days\lMicroSeconds\lMinutes\lMonths\lNames : list\lNoTimeFrame\lSeconds\lTicks\lWeeks\lYears\lnames : list\l|TFrame(name)\lTName(tframe)\lgetname(tframe, compression)\l}", shape="record", style="solid"];
"backtrader.analyzer.TimeFrameAnalyzerBase" [color="black", fontcolor="black", label="{TimeFrameAnalyzerBase|compression\ldtcmp : int, NoneType\ldtcmp1 : NoneType, int\ldtkey : datetime, date, NoneType\ldtkey1 : datetime, date, NoneType\lparams : tuple\ltimeframe\l|on_dt_over()\l}", shape="record", style="solid"];
"backtrader.analyzers.timereturn.TimeReturn" [color="black", fontcolor="black", label="{TimeReturn|params : tuple\l|next()\lnotify_fund(cash, value, fundvalue, shares)\lon_dt_over()\lstart()\l}", shape="record", style="solid"];
"backtrader.observers.timereturn.TimeReturn" [color="black", fontcolor="black", label="{TimeReturn|lines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\ltreturn\l|next()\l}", shape="record", style="solid"];
"backtrader.timer.Timer" [color="black", fontcolor="black", label="{Timer|SESSION_END\lSESSION_START\lSESSION_TIME\largs : tuple\lkwargs : dict\llastwhen : NoneType, datetime\lparams : tuple\l|check(dt)\lstart(data)\l}", shape="record", style="solid"];
"backtrader.trade.Trade" [color="black", fontcolor="black", label="{Trade|Closed\lCreated\lOpen\lbarclose : int\lbarlen : int\lbaropen : int\lcommission : float\ldata : NoneType\ldtclose : float\ldtopen : float\lhistory : list\lhistoryon : bool\lisclosed : bool\lisopen : bool\ljustopened : bool\llong\lpnl : float\lpnlcomm : float\lprice : float\lref\lrefbasis : count\lsize : int\lstatus\lstatus_names : list\ltradeid : int\lvalue : float\l|close_datetime(tz, naive)\lgetdataname()\lopen_datetime(tz, naive)\lupdate(order, size, price, value, commission, pnl, comminfo)\l}", shape="record", style="solid"];
"backtrader.analyzers.tradeanalyzer.TradeAnalyzer" [color="black", fontcolor="black", label="{TradeAnalyzer|rets\l|create_analysis()\lnotify_trade(trade)\lstop()\l}", shape="record", style="solid"];
"backtrader.trade.TradeHistory" [color="black", fontcolor="black", label="{TradeHistory|event : NoneType\l|datetime(tz, naive)\ldoupdate(order, size, price, commission)\l}", shape="record", style="solid"];
"backtrader.observers.trades.Trades" [color="black", fontcolor="black", label="{Trades|lines : tuple\lparams : dict\lplotinfo : dict\lplotlines : dict\ltrades : int\ltrades_length : int\ltrades_length_max : int\ltrades_length_min : int\ltrades_long : int\ltrades_loss : int\ltrades_loss_max : int\ltrades_loss_min : int\ltrades_minus : int\ltrades_minus_gross : int\ltrades_plus : int\ltrades_plus_gross : int\ltrades_short : int\ltrades_win : int\ltrades_win_max : int\ltrades_win_min : int\l|next()\l}", shape="record", style="solid"];
"backtrader.tradingcal.TradingCalendar" [color="black", fontcolor="black", label="{TradingCalendar|params : tuple\l|schedule(day, tz)\l}", shape="record", style="solid"];
"backtrader.tradingcal.TradingCalendarBase" [color="black", fontcolor="black", label="{TradingCalendarBase|\l|last_monthday(day)\llast_weekday(day)\llast_yearday(day)\lnextday(day)\lnextday_week(day)\lschedule(day)\l}", shape="record", style="solid"];
"backtrader.analyzers.transactions.Transactions" [color="black", fontcolor="black", label="{Transactions|params : tuple\l|next()\lnotify_order(order)\lstart()\l}", shape="record", style="solid"];
"backtrader.indicators.dema.TripleExponentialMovingAverage" [color="black", fontcolor="black", label="{TripleExponentialMovingAverage|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.trix.Trix" [color="black", fontcolor="black", label="{Trix|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.trix.TrixSignal" [color="black", fontcolor="black", label="{TrixSignal|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.atr.TrueHigh" [color="black", fontcolor="black", label="{TrueHigh|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.atr.TrueLow" [color="black", fontcolor="black", label="{TrueLow|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.atr.TrueRange" [color="black", fontcolor="black", label="{TrueRange|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.tsi.TrueStrengthIndicator" [color="black", fontcolor="black", label="{TrueStrengthIndicator|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.ultimateoscillator.UltimateOscillator" [color="black", fontcolor="black", label="{UltimateOscillator|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.UpDay" [color="black", fontcolor="black", label="{UpDay|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.rsi.UpDayBool" [color="black", fontcolor="black", label="{UpDayBool|lines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove.UpMove" [color="black", fontcolor="black", label="{UpMove|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.brokers.vcbroker.VCBroker" [color="black", fontcolor="black", label="{VCBroker|cash : float\lnotifs : deque\lorderbyid : dict\lparams : tuple\lpositions : defaultdict\lstartingcash : float\lstartingvalue : float\lstore : NoneType\ltrader\lvalue : float\l|OnCancelledOrder(Order)\lOnChangedBalance(Account)\lOnChangedOpenPositions(Account)\lOnExecutedOrder(Order, partial)\lOnInternalEvent(p1, p2, p3)\lOnModifiedOrder(Order)\lOnNewClosedOperations(Account)\lOnNewOrderLocation(Order)\lOnOrderInMarket(Order)\lOnPartialExecutedOrder(Order)\lOnServerShutDown()\lOnTotalExecutedOrder(Order)\lbuy(owner, data, size, price, plimit, exectype, valid, tradeid)\lget_notification()\lgetcash()\lgetcommissioninfo(data)\lgetposition(data, clone)\lgetvalue(datas)\lnext()\lnotify(order)\lsell(owner, data, size, price, plimit, exectype, valid, tradeid)\lstart()\lstop()\lsubmit(order, vcorder)\l}", shape="record", style="solid"];
"backtrader.brokers.vcbroker.VCCommInfo" [color="black", fontcolor="black", label="{VCCommInfo|\l|getoperationcost(size, price)\lgetvaluesize(size, price)\l}", shape="record", style="solid"];
"backtrader.feeds.vcdata.VCData" [color="black", fontcolor="black", label="{VCData|MILLISECOND : timedelta\lNULLDATE : datetime\lPING_TIMEOUT : float\lidx : int\llastconn\lparams : tuple\lq : NoneType\lqrt : Queue\lstore : NoneType\l|OnInternalEvent(p1, p2, p3)\lOnNewDataSerieBar(DataSerie, forcepush)\lOnNewTicks(ArrayTicks)\ldebug_ticks(ticks)\lhaslivedata()\lislive()\lping()\lsetenvironment(env)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.stores.vcstore.VCStore" [color="black", fontcolor="black", label="{VCStore|CreateObject\lGetEvents\lGetModule\lMAXDATE1\lMAXDATE2\lMAXUINT : int\lVC64_DLLS : tuple\lVC_BINPATH : str\lVC_DLLS : tuple\lVC_KEYNAME : str\lVC_KEYVAL : str\lVC_TLIBS : tuple\lcomtypes\lnotifs : deque\lt_vcconn : NoneType, Thread\lvcct : NoneType\lvcctmod : NoneType\lvcds : NoneType\lvcdsmod : NoneType\lvcrt : NoneType\lvcrtfields : dict\lvcrtmod : NoneType\l|connected()\lfind_vchart()\lget_notifications()\lgetbroker()\lgetdata()\lput_notification(msg)\lstart(data, broker)\lstop()\l}", shape="record", style="solid"];
"backtrader.feeds.vchartcsv.VChartCSV" [color="black", fontcolor="black", label="{VChartCSV|DataCls\l|}", shape="record", style="solid"];
"backtrader.feeds.vchartcsv.VChartCSVData" [color="black", fontcolor="black", label="{VChartCSVData|vctframes : dict\l|}", shape="record", style="solid"];
"backtrader.feeds.vchart.VChartData" [color="black", fontcolor="black", label="{VChartData|barfmt : str\lbarsize : int\ldtsize : int\lext : str\lf : NoneType\l|start()\lstop()\l}", shape="record", style="solid"];
"backtrader.feeds.vchart.VChartFeed" [color="black", fontcolor="black", label="{VChartFeed|DataCls\lparams\l|}", shape="record", style="solid"];
"backtrader.feeds.vchartfile.VChartFile" [color="black", fontcolor="black", label="{VChartFile|f : NoneType\l|start()\lstop()\l}", shape="record", style="solid"];
"backtrader.stores.vchartfile.VChartFile" [color="black", fontcolor="black", label="{VChartFile|params : tuple\l|get_datapath()\l}", shape="record", style="solid"];
"backtrader.analyzers.vwr.VWR" [color="black", fontcolor="black", label="{VWR|params : tuple\l|notify_fund(cash, value, fundvalue, shares)\lstart()\lstop()\l}", shape="record", style="solid"];
"backtrader.observers.broker.Value" [color="black", fontcolor="black", label="{Value|lines : tuple\lparams : tuple\lplotinfo : dict\l|next()\lstart()\l}", shape="record", style="solid"];
"backtrader.plot.finance.VolumePlotHandler" [color="black", fontcolor="black", label="{VolumePlotHandler|barcol : PolyCollection\lcolordown : tuple\lcolorup : tuple\ledgedown : tuple\ledgeup : tuple\llegend_closes : list\llegend_opens : list\llegend_vols : list\l|barcollection(x, opens, closes, vols, width, edgeadjust, vscaling, vbot)\llegend_artist(legend, orig_handle, fontsize, handlebox)\l}", shape="record", style="solid"];
"backtrader.indicators.vortex.Vortex" [color="black", fontcolor="black", label="{Vortex|lines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.contrib.vortex.Vortex" [color="black", fontcolor="black", label="{Vortex|lines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.basicops.WeightedAverage" [color="black", fontcolor="black", label="{WeightedAverage|alias : tuple\llines : tuple\lparams : tuple\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.indicators.wma.WeightedMovingAverage" [color="black", fontcolor="black", label="{WeightedMovingAverage|alias : tuple\llines : tuple\l|}", shape="record", style="solid"];
"backtrader.plot.multicursor.Widget" [color="black", fontcolor="black", label="{Widget|active\ldrawon : bool\leventson : bool\l|get_active()\lignore(event)\lset_active(active)\l}", shape="record", style="solid"];
"backtrader.indicators.williams.WilliamsAD" [color="black", fontcolor="black", label="{WilliamsAD|lines : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.williams.WilliamsR" [color="black", fontcolor="black", label="{WilliamsR|lines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.writer.WriterBase" [color="black", fontcolor="black", label="{WriterBase|\l|}", shape="record", style="solid"];
"backtrader.writer.WriterFile" [color="black", fontcolor="black", label="{WriterFile|close_out : bool\lheaders : list\lout : StringIO, StreamWrapper\lparams : tuple\lvalues : list\l|addheaders(headers)\laddvalues(values)\lnext()\lstart()\lstop()\lwritedict(dct, level, recurse)\lwriteiterable(iterable, func, counter)\lwriteline(line)\lwritelines(lines)\lwritelineseparator(level)\l}", shape="record", style="solid"];
"backtrader.writer.WriterStringIO" [color="black", fontcolor="black", label="{WriterStringIO|out\lparams : tuple\l|stop()\l}", shape="record", style="solid"];
"backtrader.feeds.yahoo.YahooFinance" [color="black", fontcolor="black", label="{YahooFinance|DataCls\lparams\l|}", shape="record", style="solid"];
"backtrader.feeds.yahoo.YahooFinanceCSV" [color="black", fontcolor="black", label="{YahooFinanceCSV|DataCls\l|}", shape="record", style="solid"];
"backtrader.feeds.yahoo.YahooFinanceCSVData" [color="black", fontcolor="black", label="{YahooFinanceCSVData|f : StringIO\llines : tuple\lparams : tuple\l|start()\l}", shape="record", style="solid"];
"backtrader.feeds.yahoo.YahooFinanceData" [color="black", fontcolor="black", label="{YahooFinanceData|error : NoneType, str\lf : NoneType, StringIO\lparams : tuple\l|start()\lstart_v7()\l}", shape="record", style="solid"];
"backtrader.feeds.yahoo.YahooLegacyCSV" [color="black", fontcolor="black", label="{YahooLegacyCSV|params : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.zlema.ZeroLagExponentialMovingAverage" [color="black", fontcolor="black", label="{ZeroLagExponentialMovingAverage|alias : tuple\llines : tuple\lparams : tuple\l|}", shape="record", style="solid"];
"backtrader.indicators.zlind.ZeroLagIndicator" [color="black", fontcolor="black", label="{ZeroLagIndicator|alias : tuple\lema\llimits : list\llines : tuple\lparams : tuple\l|next()\l}", shape="record", style="solid"];
"backtrader.indicators.aroon._AroonBase" [color="black", fontcolor="black", label="{_AroonBase|down\lparams : tuple\lplotinfo : dict\lup\l|}", shape="record", style="solid"];
"backtrader.dataseries._Bar" [color="black", fontcolor="black", label="{_Bar|MAXDATE\lclose : float\ldatetime : float, NoneType\lhigh : float\llow : float\lopen : float\lopeninterest : float\lreplaying : bool\lvolume : float\l|bstart(maxdate)\lbupdate(data, reopen)\lisopen()\l}", shape="record", style="solid"];
"backtrader.resamplerfilter._BaseResampler" [color="black", fontcolor="black", label="{_BaseResampler|bar\lcompcount : int\lcomponly\ldata\ldoadjusttime\lparams : tuple\lsubdays\lsubweeks\l|check(data, _forcedata)\l}", shape="record", style="solid"];
"backtrader.indicators.crossover._CrossBase" [color="black", fontcolor="black", label="{_CrossBase|lines : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.directionalmove._DirectionalIndicator" [color="black", fontcolor="black", label="{_DirectionalIndicator|DIminus\lDIplus\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.envelope._EnvelopeBase" [color="black", fontcolor="black", label="{_EnvelopeBase|lines : tuple\lplotinfo : dict\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.linebuffer._LineDelay" [color="black", fontcolor="black", label="{_LineDelay|a\lago\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.linebuffer._LineForward" [color="black", fontcolor="black", label="{_LineForward|a\lago\l|next()\lonce(start, end)\l}", shape="record", style="solid"];
"backtrader.utils.dateintern._LocalTimezone" [color="black", fontcolor="black", label="{_LocalTimezone|\l|dst(dt)\llocalize(dt)\ltzname(dt)\lutcoffset(dt)\l}", shape="record", style="solid"];
"backtrader.talib._MetaTALibIndicator" [color="black", fontcolor="black", label="{_MetaTALibIndicator|\l|dopostinit(_obj)\l}", shape="record", style="solid"];
"backtrader.indicators.priceoscillator._PriceOscBase" [color="black", fontcolor="black", label="{_PriceOscBase|ma1\lma2\lparams : tuple\lplotinfo : dict\l|}", shape="record", style="solid"];
"backtrader.indicators.psar._SarStatus" [color="black", fontcolor="black", label="{_SarStatus|af : float\lep : float\lsar : NoneType\ltr : NoneType\l|}", shape="record", style="solid"];
"backtrader.indicators.stochastic._StochasticBase" [color="black", fontcolor="black", label="{_StochasticBase|d\lk\llines : tuple\lparams : tuple\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.stores.vcstore._SymInfo" [color="black", fontcolor="black", label="{_SymInfo|\l|}", shape="record", style="solid"];
"backtrader.talib._TALibIndicator" [color="black", fontcolor="black", label="{_TALibIndicator|CANDLEOVER : float\lCANDLEREF : int\l|next()\lonce(start, end)\loncestart(start, end)\l}", shape="record", style="solid"];
"backtrader.utils.dateintern._UTC" [color="black", fontcolor="black", label="{_UTC|\l|dst(dt)\llocalize(dt)\ltzname(dt)\lutcoffset(dt)\l}", shape="record", style="solid"];
"backtrader.utils.flushfile.flushfile" [color="black", fontcolor="black", label="{flushfile|f\l|flush()\lwrite(x)\l}", shape="record", style="solid"];
"backtrader.indicators.hadelta.haDelta" [color="black", fontcolor="black", label="{haDelta|alias : tuple\llines : tuple\lparams : tuple\lplotinfo : dict\lplotlines : dict\l|}", shape="record", style="solid"];
"backtrader.utils.py3.with_metaclass.metaclass" [color="black", fontcolor="black", label="{metaclass|\l|}", shape="record", style="solid"];
"backtrader.analyzer.MetaAnalyzer" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzer.MetaTimeFrameAnalyzerBase" -> "backtrader.analyzer.MetaAnalyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.annualreturn.AnnualReturn" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.calmar.Calmar" -> "backtrader.analyzer.TimeFrameAnalyzerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.drawdown.DrawDown" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.drawdown.TimeDrawDown" -> "backtrader.analyzer.TimeFrameAnalyzerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.leverage.GrossLeverage" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.logreturnsrolling.LogReturnsRolling" -> "backtrader.analyzer.TimeFrameAnalyzerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.periodstats.PeriodStats" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.positions.PositionsValue" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.pyfolio.PyFolio" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.returns.Returns" -> "backtrader.analyzer.TimeFrameAnalyzerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.sharpe.SharpeRatio" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.sharpe.SharpeRatio_A" -> "backtrader.analyzers.sharpe.SharpeRatio" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.sqn.SQN" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.timereturn.TimeReturn" -> "backtrader.analyzer.TimeFrameAnalyzerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.tradeanalyzer.TradeAnalyzer" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.transactions.Transactions" -> "backtrader.analyzer.Analyzer" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.vwr.VWR" -> "backtrader.analyzer.TimeFrameAnalyzerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.broker.MetaBroker" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.bbroker.BackBroker" -> "backtrader.broker.BrokerBase" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.ibbroker.IBCommInfo" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.ibbroker.IBOrder" -> "backtrader.order.OrderBase" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.ibbroker.MetaIBBroker" -> "backtrader.broker.MetaBroker" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.oandabroker.MetaOandaBroker" -> "backtrader.broker.MetaBroker" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.oandabroker.OandaCommInfo" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.vcbroker.MetaVCBroker" -> "backtrader.broker.MetaBroker" [arrowhead="empty", arrowtail="none"];
"backtrader.brokers.vcbroker.VCCommInfo" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.comminfo.CommissionInfo" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo_Futures" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo_Futures_Fixed" -> "backtrader.commissions.CommInfo_Futures" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo_Futures_Perc" -> "backtrader.commissions.CommInfo_Futures" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo_Stocks" -> "backtrader.comminfo.CommInfoBase" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo_Stocks_Fixed" -> "backtrader.commissions.CommInfo_Stocks" [arrowhead="empty", arrowtail="none"];
"backtrader.commissions.CommInfo_Stocks_Perc" -> "backtrader.commissions.CommInfo_Stocks" [arrowhead="empty", arrowtail="none"];
"backtrader.dataseries.DataSeries" -> "backtrader.lineseries.LineSeries" [arrowhead="empty", arrowtail="none"];
"backtrader.dataseries.OHLC" -> "backtrader.dataseries.DataSeries" [arrowhead="empty", arrowtail="none"];
"backtrader.dataseries.OHLCDateTime" -> "backtrader.dataseries.OHLC" [arrowhead="empty", arrowtail="none"];
"backtrader.dataseries._Bar" -> "backtrader.utils.autodict.AutoOrderedDict" [arrowhead="empty", arrowtail="none"];
"backtrader.errors.FromModuleImportError" -> "backtrader.errors.ModuleImportError" [arrowhead="empty", arrowtail="none"];
"backtrader.errors.ModuleImportError" -> "backtrader.errors.BacktraderError" [arrowhead="empty", arrowtail="none"];
"backtrader.errors.StrategySkipError" -> "backtrader.errors.BacktraderError" [arrowhead="empty", arrowtail="none"];
"backtrader.feed.CSVFeedBase" -> "backtrader.feed.FeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feed.DataBase" -> "backtrader.feed.AbstractDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feed.DataClone" -> "backtrader.feed.AbstractDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.blaze.BlazeData" -> "backtrader.feed.DataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.btcsv.BacktraderCSV" -> "backtrader.feed.CSVFeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.btcsv.BacktraderCSVData" -> "backtrader.feed.CSVDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.csvgeneric.GenericCSV" -> "backtrader.feed.CSVFeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.csvgeneric.GenericCSVData" -> "backtrader.feed.CSVDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.influxfeed.InfluxDB" -> "backtrader.feed.DataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.mt4csv.MT4CSVData" -> "backtrader.feeds.csvgeneric.GenericCSVData" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.pandafeed.PandasData" -> "backtrader.feed.DataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.pandafeed.PandasDirectData" -> "backtrader.feed.DataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.quandl.Quandl" -> "backtrader.feeds.quandl.QuandlCSV" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.quandl.QuandlCSV" -> "backtrader.feed.CSVDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.sierrachart.SierraChartCSVData" -> "backtrader.feeds.csvgeneric.GenericCSVData" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.vchart.VChartData" -> "backtrader.feed.DataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.vchart.VChartFeed" -> "backtrader.feed.FeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.vchartcsv.VChartCSV" -> "backtrader.feed.CSVFeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.vchartcsv.VChartCSVData" -> "backtrader.feed.CSVDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.yahoo.YahooFinance" -> "backtrader.feed.CSVFeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.yahoo.YahooFinanceCSV" -> "backtrader.feed.CSVFeedBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.yahoo.YahooFinanceCSVData" -> "backtrader.feed.CSVDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.yahoo.YahooFinanceData" -> "backtrader.feeds.yahoo.YahooFinanceCSVData" [arrowhead="empty", arrowtail="none"];
"backtrader.feeds.yahoo.YahooLegacyCSV" -> "backtrader.feeds.yahoo.YahooFinanceCSVData" [arrowhead="empty", arrowtail="none"];
"backtrader.filters.datafiller.DataFiller" -> "backtrader.feed.AbstractDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.filters.datafilter.DataFilter" -> "backtrader.feed.AbstractDataBase" [arrowhead="empty", arrowtail="none"];
"backtrader.filters.renko.Renko" -> "backtrader.flt.Filter" [arrowhead="empty", arrowtail="none"];
"backtrader.flt.MetaFilter" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.All" -> "backtrader.functions.MultiLogic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.And" -> "backtrader.functions.MultiLogicReduce" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Any" -> "backtrader.functions.MultiLogic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Cmp" -> "backtrader.functions.Logic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.CmpEx" -> "backtrader.functions.Logic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.DivByZero" -> "backtrader.functions.Logic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.DivZeroByZero" -> "backtrader.functions.Logic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.If" -> "backtrader.functions.Logic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Logic" -> "backtrader.linebuffer.LineActions" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Max" -> "backtrader.functions.MultiLogic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Min" -> "backtrader.functions.MultiLogic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.MultiLogic" -> "backtrader.functions.Logic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.MultiLogicReduce" -> "backtrader.functions.MultiLogic" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Or" -> "backtrader.functions.MultiLogicReduce" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Reduce" -> "backtrader.functions.MultiLogicReduce" [arrowhead="empty", arrowtail="none"];
"backtrader.functions.Sum" -> "backtrader.functions.MultiLogic" [arrowhead="empty", arrowtail="none"];
"backtrader.indicator.MtLinePlotterIndicator" -> "backtrader.indicator.MetaIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.accdecoscillator.AccelerationDecelerationOscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonDown" -> "backtrader.indicators.aroon._AroonBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonOscillator" -> "backtrader.indicators.aroon._AroonBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonUp" -> "backtrader.indicators.aroon._AroonBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonUpDown" -> "backtrader.indicators.aroon.AroonDown" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonUpDown" -> "backtrader.indicators.aroon.AroonUp" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonUpDownOscillator" -> "backtrader.indicators.aroon.AroonOscillator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon.AroonUpDownOscillator" -> "backtrader.indicators.aroon.AroonUpDown" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.aroon._AroonBase" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.atr.AverageTrueRange" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.atr.TrueHigh" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.atr.TrueLow" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.atr.TrueRange" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.awesomeoscillator.AwesomeOscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.Accum" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.AllN" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.AnyN" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.ApplyN" -> "backtrader.indicators.basicops.BaseApplyN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.Average" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.BaseApplyN" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.ExponentialSmoothing" -> "backtrader.indicators.basicops.Average" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.ExponentialSmoothingDynamic" -> "backtrader.indicators.basicops.ExponentialSmoothing" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.FindFirstIndex" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.FindFirstIndexHighest" -> "backtrader.indicators.basicops.FindFirstIndex" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.FindFirstIndexLowest" -> "backtrader.indicators.basicops.FindFirstIndex" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.FindLastIndex" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.FindLastIndexHighest" -> "backtrader.indicators.basicops.FindLastIndex" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.FindLastIndexLowest" -> "backtrader.indicators.basicops.FindLastIndex" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.Highest" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.Lowest" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.OperationN" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.PeriodN" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.ReduceN" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.SumN" -> "backtrader.indicators.basicops.OperationN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.basicops.WeightedAverage" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.bollinger.BollingerBands" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.bollinger.BollingerBandsPct" -> "backtrader.indicators.bollinger.BollingerBands" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.cci.CommodityChannelIndex" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.contrib.vortex.Vortex" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.crossover.CrossDown" -> "backtrader.indicators.crossover._CrossBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.crossover.CrossOver" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.crossover.CrossUp" -> "backtrader.indicators.crossover._CrossBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.crossover.NonZeroDifference" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.crossover._CrossBase" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.dema.DoubleExponentialMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.dema.TripleExponentialMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.deviation.MeanDeviation" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.deviation.StandardDeviation" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.AverageDirectionalMovementIndex" -> "backtrader.indicators.directionalmove._DirectionalIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.AverageDirectionalMovementIndexRating" -> "backtrader.indicators.directionalmove.AverageDirectionalMovementIndex" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.DirectionalIndicator" -> "backtrader.indicators.directionalmove._DirectionalIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.DirectionalMovement" -> "backtrader.indicators.directionalmove.AverageDirectionalMovementIndexRating" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.DirectionalMovement" -> "backtrader.indicators.directionalmove.DirectionalIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.DirectionalMovementIndex" -> "backtrader.indicators.directionalmove.AverageDirectionalMovementIndex" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.DirectionalMovementIndex" -> "backtrader.indicators.directionalmove.DirectionalIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.DownMove" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.MinusDirectionalIndicator" -> "backtrader.indicators.directionalmove._DirectionalIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.PlusDirectionalIndicator" -> "backtrader.indicators.directionalmove._DirectionalIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove.UpMove" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.directionalmove._DirectionalIndicator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.dma.DicksonMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.dpo.DetrendedPriceOscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.dv2.DV2" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ema.ExponentialMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.envelope.Envelope" -> "backtrader.indicators.envelope.EnvelopeMixIn" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.envelope.Envelope" -> "backtrader.indicators.envelope._EnvelopeBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.envelope._EnvelopeBase" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.hadelta.haDelta" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.heikinashi.HeikinAshi" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.hma.HullMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.hurst.HurstExponent" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ichimoku.Ichimoku" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.kama.AdaptiveMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.kst.KnowSureThing" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.lrsi.LaguerreFilter" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.lrsi.LaguerreRSI" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.mabase.MetaMovAvBase" -> "backtrader.indicator.MetaIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.mabase.MovAv" -> "backtrader.indicators.mabase.MovingAverage" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.macd.MACD" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.macd.MACDHisto" -> "backtrader.indicators.macd.MACD" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.momentum.Momentum" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.momentum.MomentumOscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.momentum.RateOfChange" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.momentum.RateOfChange100" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ols.CointN" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ols.OLS_BetaN" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ols.OLS_Slope_InterceptN" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ols.OLS_TransformationN" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.oscillator.Oscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.oscillator.OscillatorMixIn" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.percentchange.PercentChange" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.percentrank.PercentRank" -> "backtrader.indicators.basicops.BaseApplyN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.pivotpoint.DemarkPivotPoint" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.pivotpoint.FibonacciPivotPoint" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.pivotpoint.PivotPoint" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.prettygoodoscillator.PrettyGoodOscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.priceoscillator.PercentagePriceOscillator" -> "backtrader.indicators.priceoscillator._PriceOscBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.priceoscillator.PercentagePriceOscillatorShort" -> "backtrader.indicators.priceoscillator.PercentagePriceOscillator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.priceoscillator.PriceOscillator" -> "backtrader.indicators.priceoscillator._PriceOscBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.priceoscillator._PriceOscBase" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.psar.ParabolicSAR" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.rsi.DownDay" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.rsi.DownDayBool" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.rsi.RelativeStrengthIndex" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.rsi.UpDay" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.rsi.UpDayBool" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.sma.MovingAverageSimple" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.smma.SmoothedMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.stochastic.Stochastic" -> "backtrader.indicators.stochastic._StochasticBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.stochastic.StochasticFast" -> "backtrader.indicators.stochastic._StochasticBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.stochastic.StochasticFull" -> "backtrader.indicators.stochastic._StochasticBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.stochastic._StochasticBase" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.trix.Trix" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.trix.TrixSignal" -> "backtrader.indicators.trix.Trix" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.tsi.TrueStrengthIndicator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.ultimateoscillator.UltimateOscillator" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.vortex.Vortex" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.williams.WilliamsAD" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.williams.WilliamsR" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.wma.WeightedMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.zlema.ZeroLagExponentialMovingAverage" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.indicators.zlind.ZeroLagIndicator" -> "backtrader.indicators.mabase.MovingAverageBase" [arrowhead="empty", arrowtail="none"];
"backtrader.linebuffer.LineBuffer" -> "backtrader.lineroot.LineSingle" [arrowhead="empty", arrowtail="none"];
"backtrader.linebuffer.LineOwnOperation" -> "backtrader.linebuffer.LineActions" [arrowhead="empty", arrowtail="none"];
"backtrader.linebuffer.LinesOperation" -> "backtrader.linebuffer.LineActions" [arrowhead="empty", arrowtail="none"];
"backtrader.linebuffer._LineDelay" -> "backtrader.linebuffer.LineActions" [arrowhead="empty", arrowtail="none"];
"backtrader.linebuffer._LineForward" -> "backtrader.linebuffer.LineActions" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.DataAccessor" -> "backtrader.lineiterator.LineIterator" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.IndicatorBase" -> "backtrader.lineiterator.DataAccessor" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.MetaLineIterator" -> "backtrader.lineseries.MetaLineSeries" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.MultiCoupler" -> "backtrader.lineiterator.LineIterator" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.ObserverBase" -> "backtrader.lineiterator.DataAccessor" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.SingleCoupler" -> "backtrader.linebuffer.LineActions" [arrowhead="empty", arrowtail="none"];
"backtrader.lineiterator.StrategyBase" -> "backtrader.lineiterator.DataAccessor" [arrowhead="empty", arrowtail="none"];
"backtrader.lineroot.LineMultiple" -> "backtrader.lineroot.LineRoot" [arrowhead="empty", arrowtail="none"];
"backtrader.lineroot.LineSingle" -> "backtrader.lineroot.LineRoot" [arrowhead="empty", arrowtail="none"];
"backtrader.lineseries.LineSeriesStub" -> "backtrader.lineseries.LineSeries" [arrowhead="empty", arrowtail="none"];
"backtrader.metabase.MetaParams" -> "backtrader.metabase.MetaBase" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.benchmark.Benchmark" -> "backtrader.observers.timereturn.TimeReturn" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.broker.Broker" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.broker.Cash" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.broker.FundShares" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.broker.FundValue" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.broker.Value" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.buysell.BuySell" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.drawdown.DrawDown" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.drawdown.DrawDownLength" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.drawdown.DrawDown_Old" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.logreturns.LogReturns" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.logreturns.LogReturns2" -> "backtrader.observers.logreturns.LogReturns" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.timereturn.TimeReturn" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.trades.MetaDataTrades" -> "backtrader.observer.MetaObserver" [arrowhead="empty", arrowtail="none"];
"backtrader.observers.trades.Trades" -> "backtrader.observer.Observer" [arrowhead="empty", arrowtail="none"];
"backtrader.order.BuyOrder" -> "backtrader.order.Order" [arrowhead="empty", arrowtail="none"];
"backtrader.order.Order" -> "backtrader.order.OrderBase" [arrowhead="empty", arrowtail="none"];
"backtrader.order.SellOrder" -> "backtrader.order.Order" [arrowhead="empty", arrowtail="none"];
"backtrader.order.StopBuyOrder" -> "backtrader.order.BuyOrder" [arrowhead="empty", arrowtail="none"];
"backtrader.order.StopLimitBuyOrder" -> "backtrader.order.BuyOrder" [arrowhead="empty", arrowtail="none"];
"backtrader.order.StopLimitSellOrder" -> "backtrader.order.SellOrder" [arrowhead="empty", arrowtail="none"];
"backtrader.order.StopSellOrder" -> "backtrader.order.SellOrder" [arrowhead="empty", arrowtail="none"];
"backtrader.plot.multicursor.MultiCursor" -> "backtrader.plot.multicursor.Widget" [arrowhead="empty", arrowtail="none"];
"backtrader.plot.multicursor.MultiCursor2" -> "backtrader.plot.multicursor.Widget" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.Replayer" -> "backtrader.resamplerfilter._BaseResampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ReplayerDaily" -> "backtrader.resamplerfilter.Replayer" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ReplayerMinutes" -> "backtrader.resamplerfilter.Replayer" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ReplayerMonthly" -> "backtrader.resamplerfilter.Replayer" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ReplayerSeconds" -> "backtrader.resamplerfilter.Replayer" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ReplayerTicks" -> "backtrader.resamplerfilter.Replayer" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ReplayerWeekly" -> "backtrader.resamplerfilter.Replayer" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.Resampler" -> "backtrader.resamplerfilter._BaseResampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerDaily" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerMinutes" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerMonthly" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerSeconds" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerTicks" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerWeekly" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.resamplerfilter.ResamplerYearly" -> "backtrader.resamplerfilter.Resampler" [arrowhead="empty", arrowtail="none"];
"backtrader.signal.Signal" -> "backtrader.indicator.Indicator" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.fixedsize.FixedReverser" -> "backtrader.sizer.Sizer" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.fixedsize.FixedSize" -> "backtrader.sizer.Sizer" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.fixedsize.FixedSizeTarget" -> "backtrader.sizer.Sizer" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.percents_sizer.AllInSizer" -> "backtrader.sizers.percents_sizer.PercentSizer" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.percents_sizer.AllInSizerInt" -> "backtrader.sizers.percents_sizer.PercentSizerInt" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.percents_sizer.PercentSizer" -> "backtrader.sizer.Sizer" [arrowhead="empty", arrowtail="none"];
"backtrader.sizers.percents_sizer.PercentSizerInt" -> "backtrader.sizers.percents_sizer.PercentSizer" [arrowhead="empty", arrowtail="none"];
"backtrader.store.MetaSingleton" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.stores.ibstore.MetaSingleton" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.stores.oandastore.MetaSingleton" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.stores.vchartfile.VChartFile" -> "backtrader.store.Store" [arrowhead="empty", arrowtail="none"];
"backtrader.stores.vcstore.MetaSingleton" -> "backtrader.metabase.MetaParams" [arrowhead="empty", arrowtail="none"];
"backtrader.strategies.sma_crossover.MA_CrossOver" -> "backtrader.strategy.Strategy" [arrowhead="empty", arrowtail="none"];
"backtrader.strategy.MetaSigStrategy" -> "backtrader.strategy.MetaStrategy" [arrowhead="empty", arrowtail="none"];
"backtrader.studies.contrib.fractal.Fractal" -> "backtrader.indicators.basicops.PeriodN" [arrowhead="empty", arrowtail="none"];
"backtrader.talib._MetaTALibIndicator" -> "backtrader.indicator.MetaIndicator" [arrowhead="empty", arrowtail="none"];
"backtrader.trade.TradeHistory" -> "backtrader.utils.autodict.AutoOrderedDict" [arrowhead="empty", arrowtail="none"];
"backtrader.tradingcal.PandasMarketCalendar" -> "backtrader.tradingcal.TradingCalendarBase" [arrowhead="empty", arrowtail="none"];
"backtrader.tradingcal.TradingCalendar" -> "backtrader.tradingcal.TradingCalendarBase" [arrowhead="empty", arrowtail="none"];
"backtrader.writer.WriterFile" -> "backtrader.writer.WriterBase" [arrowhead="empty", arrowtail="none"];
"backtrader.writer.WriterStringIO" -> "backtrader.writer.WriterFile" [arrowhead="empty", arrowtail="none"];
"backtrader.analyzers.annualreturn.AnnualReturn" -> "backtrader.analyzers.sharpe.SharpeRatio" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="anret", style="solid"];
"backtrader.analyzers.drawdown.TimeDrawDown" -> "backtrader.analyzers.calmar.Calmar" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_maxdd", style="solid"];
"backtrader.analyzers.leverage.GrossLeverage" -> "backtrader.analyzers.pyfolio.PyFolio" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_gross_lev", style="solid"];
"backtrader.analyzers.positions.PositionsValue" -> "backtrader.analyzers.pyfolio.PyFolio" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_positions", style="solid"];
"backtrader.analyzers.returns.Returns" -> "backtrader.analyzers.vwr.VWR" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_returns", style="solid"];
"backtrader.analyzers.timereturn.TimeReturn" -> "backtrader.analyzers.periodstats.PeriodStats" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_tr", style="solid"];
"backtrader.analyzers.timereturn.TimeReturn" -> "backtrader.analyzers.pyfolio.PyFolio" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_returns", style="solid"];
"backtrader.analyzers.timereturn.TimeReturn" -> "backtrader.analyzers.sharpe.SharpeRatio" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="timereturn", style="solid"];
"backtrader.analyzers.transactions.Transactions" -> "backtrader.analyzers.pyfolio.PyFolio" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_transactions", style="solid"];
"backtrader.brokers.bbroker.BackBroker" -> "backtrader.cerebro.Cerebro" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_broker", style="solid"];
"backtrader.cerebro.Cerebro" -> "backtrader.brokers.bbroker.BackBroker" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cerebro", style="solid"];
"backtrader.dataseries._Bar" -> "backtrader.resamplerfilter._BaseResampler" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bar", style="solid"];
"backtrader.feeds.btcsv.BacktraderCSVData" -> "backtrader.feeds.btcsv.BacktraderCSV" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="DataCls", style="solid"];
"backtrader.feeds.csvgeneric.GenericCSVData" -> "backtrader.feeds.csvgeneric.GenericCSV" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="DataCls", style="solid"];
"backtrader.feeds.vchart.VChartData" -> "backtrader.feeds.vchart.VChartFeed" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="DataCls", style="solid"];
"backtrader.feeds.vchartcsv.VChartCSVData" -> "backtrader.feeds.vchartcsv.VChartCSV" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="DataCls", style="solid"];
"backtrader.feeds.yahoo.YahooFinanceCSVData" -> "backtrader.feeds.yahoo.YahooFinanceCSV" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="DataCls", style="solid"];
"backtrader.feeds.yahoo.YahooFinanceData" -> "backtrader.feeds.yahoo.YahooFinance" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="DataCls", style="solid"];
"backtrader.linebuffer.PseudoArray" -> "backtrader.functions.If" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cond", style="solid"];
"backtrader.lineiterator.StrategyBase" -> "backtrader.observer.Observer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_OwnerCls", style="solid"];
"backtrader.order.OrderData" -> "backtrader.order.OrderBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="created", style="solid"];
"backtrader.order.OrderData" -> "backtrader.order.OrderBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="executed", style="solid"];
"backtrader.order.OrderData" -> "backtrader.order.OrderBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="executed", style="solid"];
"backtrader.plot.plot.PInfo" -> "backtrader.plot.plot.Plot_OldSync" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pinf", style="solid"];
"backtrader.resamplerfilter.DTFaker" -> "backtrader.resamplerfilter.DTFaker" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datetime", style="solid"];
"backtrader.resamplerfilter.DTFaker" -> "backtrader.resamplerfilter.DTFaker" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="p", style="solid"];
"backtrader.stores.ibstore.IBStore" -> "backtrader.feeds.ibdata.IBData" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_store", style="solid"];
"backtrader.stores.oandastore.API" -> "backtrader.stores.oandastore.OandaStore" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="oapi", style="solid"];
"backtrader.stores.oandastore.OandaStore" -> "backtrader.feeds.oanda.OandaData" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_store", style="solid"];
"backtrader.tradingcal.PandasMarketCalendar" -> "backtrader.cerebro.Cerebro" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_tradingcal", style="solid"];
"backtrader.tradingcal.PandasMarketCalendar" -> "backtrader.feed.AbstractDataBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_calendar", style="solid"];
"backtrader.utils.autodict.AutoDict" -> "backtrader.stores.ibstore.IBStore" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="acc_cash", style="solid"];
"backtrader.utils.autodict.AutoDict" -> "backtrader.stores.ibstore.IBStore" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="acc_value", style="solid"];
"backtrader.utils.autodict.AutoDict" -> "backtrader.stores.ibstore.IBStore" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="acc_upds", style="solid"];
"backtrader.utils.autodict.AutoOrderedDict" -> "backtrader.analyzers.drawdown.DrawDown" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="rets", style="solid"];
"backtrader.utils.autodict.AutoOrderedDict" -> "backtrader.analyzers.sqn.SQN" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="rets", style="solid"];
"backtrader.utils.autodict.AutoOrderedDict" -> "backtrader.analyzers.tradeanalyzer.TradeAnalyzer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="rets", style="solid"];
"backtrader.utils.autodict.AutoOrderedDict" -> "backtrader.order.OrderBase" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="info", style="solid"];
"backtrader.utils.flushfile.StdOutDevNull" -> "backtrader.utils.flushfile.StdOutDevNull" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="stdout", style="solid"];
"backtrader.utils.flushfile.StdOutDevNull" -> "backtrader.writer.WriterFile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="out", style="solid"];
"backtrader.utils.flushfile.flushfile" -> "backtrader.utils.flushfile.StdOutDevNull" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="stdout", style="solid"];
"backtrader.utils.flushfile.flushfile" -> "backtrader.writer.WriterFile" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="out", style="solid"];
}
